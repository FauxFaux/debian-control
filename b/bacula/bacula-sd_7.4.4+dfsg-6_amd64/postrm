#!/bin/sh

set -e

# autopostrm will replace this with a variable containing the package
# name and the contents of the debian/<package>.autopostrm files

PACKAGE=bacula-sd
# this file is handled by debian/scripts/autopostrm
CONFFILES=/etc/bacula/bacula-sd.conf
UCF_CONFFILES=/etc/default/bacula-sd

# helper functions to purge conffiles
# with and without ucf deregistration

# delete a list of files, also with known backup extensions
purge_conf() {
    local file ext

    for file in $@; do
	rm -f $file
	for ext in '~' '%' .bak .ucf-new .ucf-old .ucf-dist .dist; do
	    rm -f $file$ext
	done
    done
}

# unregister a list of conffiles from ucf after deleting them
# usage: purge_ucf_conf <packagename> <conffile ...>
purge_ucf_conf() {
    local package file

    # save package name
    package=$1
    # remove first argument from list
    shift

    purge_conf $@
    if [ -x "`which ucf`" ]; then
	for file in $@; do
	    ucf --purge $file
	    ucfr --purge $package $file
	done
    fi
}

case "$1" in
    purge)
	if [ -n "$CONFFILES" ]; then
	    purge_conf $CONFFILES
	fi
	if [ -n "$UCF_CONFFILES" ]; then
	    purge_ucf_conf $PACKAGE $UCF_CONFFILES
	fi
	;;

    remove|upgrade|failed-upgrade|abort-install|abort-upgrade|disappear)
	;;

    *)
	echo "postrm called with unknown argument \`$1'" >&2
	exit 1
	;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

# Automatically added by dh_installdeb
dpkg-maintscript-helper dir_to_symlink /usr/share/doc/bacula-sd bacula-common 7.0.5\+dfsg-4\~ -- "$@"
# End automatically added section
# Automatically added by dh_installinit
if [ "$1" = "purge" ] ; then
	update-rc.d bacula-sd remove >/dev/null
fi


# In case this system is running systemd, we make systemd reload the unit files
# to pick up changes.
if [ -d /run/systemd/system ] ; then
	systemctl --system daemon-reload >/dev/null || true
fi
# End automatically added section
# Automatically added by dh_systemd_enable
if [ "$1" = "remove" ]; then
	if [ -x "/usr/bin/deb-systemd-helper" ]; then
		deb-systemd-helper mask bacula-sd.service >/dev/null
	fi
fi

if [ "$1" = "purge" ]; then
	if [ -x "/usr/bin/deb-systemd-helper" ]; then
		deb-systemd-helper purge bacula-sd.service >/dev/null
		deb-systemd-helper unmask bacula-sd.service >/dev/null
	fi
fi
# End automatically added section


exit 0
