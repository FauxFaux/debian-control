#!/bin/sh
# vim: set noet ts=8:
# postinst script for radosgw
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#
# 	postinst configure <most-recently-configured-version>
# 	old-postinst abort-upgrade <new-version>
# 	conflictor's-postinst abort-remove in-favour <package> <new-version>
# 	postinst abort-remove
# 	deconfigured's-postinst abort-deconfigure in-favour <failed-install-package> <version> [<removing conflicting-package> <version>]
#
# The current action is to simply remove the mistakenly-added
# /etc/init/ceph.conf file; this could be done in any of these cases,
# although technically it will leave the system in a different state
# than the original install that included that file.  So instead we
# only remove on "configure", since that's the only time we know we're
# successful in installing a newer package than the erroneous version.

# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

[ -f "/etc/default/ceph" ] && . /etc/default/ceph
[ -z "$SERVER_USER" ] && SERVER_USER=ceph
[ -z "$SERVER_GROUP" ] && SERVER_GROUP=ceph

case "$1" in
    configure)
	if ! dpkg-statoverride --list /var/lib/ceph/radosgw >/dev/null; then
	    chown $SERVER_USER:$SERVER_GROUP /var/lib/ceph/radosgw
	fi
    ;;
    abort-upgrade|abort-remove|abort-deconfigure)
	:
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

if dpkg-maintscript-helper supports mv_conffile 2>/dev/null; then
    dpkg-maintscript-helper mv_conffile \
        /etc/init/radosgw.conf /etc/init/radosgw-instance.conf \
        0.72.1-3~ radosgw -- "$@"
fi

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

# Automatically added by dh_systemd_enable/12
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	# This will only remove masks created by d-s-h on package removal.
	deb-systemd-helper unmask 'ceph-radosgw.target' >/dev/null || true

	# was-enabled defaults to true, so new installations run enable.
	if deb-systemd-helper --quiet was-enabled 'ceph-radosgw.target'; then
		# Enables the unit on first installation, creates new
		# symlinks on upgrades if the unit file has changed.
		deb-systemd-helper enable 'ceph-radosgw.target' >/dev/null || true
	else
		# Update the statefile to add new symlinks (if any), which need to be
		# cleaned up on purge. Also remove old symlinks.
		deb-systemd-helper update-state 'ceph-radosgw.target' >/dev/null || true
	fi
fi
# End automatically added section
# Automatically added by dh_systemd_start/12
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if [ -d /run/systemd/system ]; then
		systemctl --system daemon-reload >/dev/null || true
		if [ -n "$2" ]; then
			_dh_action=restart
		else
			_dh_action=start
		fi
		deb-systemd-invoke $_dh_action 'ceph-radosgw.target' >/dev/null || true
	fi
fi
# End automatically added section
# Automatically added by dh_installdeb/12
dpkg-maintscript-helper rm_conffile /etc/bash_completion.d/radosgw-admin 10.2.5-1\~ -- "$@"
dpkg-maintscript-helper rm_conffile /etc/init/radosgw-all-starter.conf 10.2.5-1\~ -- "$@"
dpkg-maintscript-helper rm_conffile /etc/init/radosgw-all.conf 10.2.5-1\~ -- "$@"
dpkg-maintscript-helper rm_conffile /etc/init/radosgw-instance.conf 10.2.5-1\~ -- "$@"
# End automatically added section
# Automatically added by dh_installinit/12
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if [ -x "/etc/init.d/radosgw" ]; then
		update-rc.d radosgw defaults >/dev/null || exit 1
	fi
fi
# End automatically added section


exit 0


