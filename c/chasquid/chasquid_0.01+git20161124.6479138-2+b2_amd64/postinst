#!/bin/sh

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#
# quoting from the policy:
#     Any necessary prompting should almost always be confined to the
#     post-installation script, and should be protected with a conditional
#     so that unnecessary prompting doesn't happen if a package's
#     installation fails and the `postinst' is called with `abort-upgrade',
#     `abort-remove' or `abort-deconfigure'.

case "$1" in
  configure)
    # Add chasquid user
    if ! getent passwd chasquid > /dev/null; then
        adduser --quiet --system --home /var/lib/chasquid --no-create-home \
            --group --gecos "chasquid mail daemon" chasquid || true
    fi

    chown -R chasquid:chasquid /var/lib/chasquid || true
  ;;

  abort-upgrade|abort-remove|abort-deconfigure)
    :
  ;;

  *)
    echo "postinst called with unknown argument \`$1'" >&2
    exit 1
  ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

# Automatically added by dh_systemd_enable
# This will only remove masks created by d-s-h on package removal.
deb-systemd-helper unmask chasquid.service >/dev/null || true

# was-enabled defaults to true, so new installations run enable.
if deb-systemd-helper --quiet was-enabled chasquid.service; then
	# Enables the unit on first installation, creates new
	# symlinks on upgrades if the unit file has changed.
	deb-systemd-helper enable chasquid.service >/dev/null || true
else
	# Update the statefile to add new symlinks (if any), which need to be
	# cleaned up on purge. Also remove old symlinks.
	deb-systemd-helper update-state chasquid.service >/dev/null || true
fi
# End automatically added section
# Automatically added by dh_systemd_enable
if deb-systemd-helper debian-installed chasquid-smtp.socket; then
	# This will only remove masks created by d-s-h on package removal.
	deb-systemd-helper unmask chasquid-smtp.socket >/dev/null || true

	if deb-systemd-helper --quiet was-enabled chasquid-smtp.socket; then
		# Create new symlinks, if any.
		deb-systemd-helper enable chasquid-smtp.socket >/dev/null || true
	fi
fi

# Update the statefile to add new symlinks (if any), which need to be cleaned
# up on purge. Also remove old symlinks.
deb-systemd-helper update-state chasquid-smtp.socket >/dev/null || true
# End automatically added section
# Automatically added by dh_systemd_enable
if deb-systemd-helper debian-installed chasquid-submission.socket; then
	# This will only remove masks created by d-s-h on package removal.
	deb-systemd-helper unmask chasquid-submission.socket >/dev/null || true

	if deb-systemd-helper --quiet was-enabled chasquid-submission.socket; then
		# Create new symlinks, if any.
		deb-systemd-helper enable chasquid-submission.socket >/dev/null || true
	fi
fi

# Update the statefile to add new symlinks (if any), which need to be cleaned
# up on purge. Also remove old symlinks.
deb-systemd-helper update-state chasquid-submission.socket >/dev/null || true
# End automatically added section
# Automatically added by dh_systemd_start
if [ -d /run/systemd/system ]; then
	systemctl --system daemon-reload >/dev/null || true
	deb-systemd-invoke start chasquid-smtp.socket chasquid-submission.socket chasquid.service >/dev/null || true
fi
# End automatically added section


exit 0
