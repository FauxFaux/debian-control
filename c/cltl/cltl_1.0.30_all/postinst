#!/bin/sh

set -e

. /usr/share/debconf/confmodule

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see /usr/share/doc/packaging-manual/
#
# quoting from the policy:
#     Any necessary prompting should almost always be confined to the
#     post-installation script, and should be protected with a conditional
#     so that unnecessary prompting doesn't happen if a package's
#     installation fails and the `postinst' is called with `abort-upgrade',
#     `abort-remove' or `abort-deconfigure'.

INDEX=/usr/share/doc/cltl/cltl2.html
URL=http://www-2.cs.cmu.edu/afs/cs.cmu.edu/project/ai-repository/ai/lang/lisp/doc/cltl/cltl_ht.tgz
FILE_DIR=/var/cache/cltl
FILE=${FILE_DIR}/cltl_ht.tgz
DOCDIR=/usr/share/doc/cltl

download_file()
{
    echo "Downloading CLTL from the Internet" 1>&2
    mkdir -p ${FILE_DIR} && \
	wget --compression=none --directory-prefix=${FILE_DIR} --passive ${URL}
    okay_or_delete
}

okay()
{
    test -s ${FILE} && gzip --test --quiet ${FILE} > /dev/null 2>&1
}

okay_or_delete()
{
    if okay; then
	true
    else
	test -e ${FILE} && rm ${FILE}
	false
    fi
}


download()
{
    if ! okay_or_delete ; then
	db_get cltl/downloading
	if [ "${RET}" = "true" ]; then
	    until download_file
	    do
	      db_reset cltl/tryagain
	      db_input medium cltl/tryagain || \
                  if [ "$?" = 30 ]; then
	              echo "Unable to download and can't ask whether to try again." 1>&2
	              exit 1
                  else
                      true
                  fi
	      db_go || true
	      db_get cltl/tryagain
		  if [ "${RET}" != "true" ]; then
		      echo "Unable to download and you don't want to try again." 1>&2
		      exit 1;
		  fi
	    done
	else
	    echo "Downloaded archive not present, but not downloading." 1>&2
	    exit 0;
	fi
    fi
}

case "$1" in
    configure)
	download
	if [ ! -d ${DOCDIR}/clm ]; then
	    if okay; then
		if tar xz -f ${FILE} -C ${DOCDIR} --no-same-owner --no-same-permissions && \
		    mv ${DOCDIR}/cltl/* ${DOCDIR} && \
		    rmdir ${DOCDIR}/cltl; then 
		    true
		else
		    echo "Error unpacking archive" 1>&2
		    exit 1;
		fi
	    else
		echo "Missing or invalid book archive file ${FILE}" 1>&2
		exit 1;
	    fi
	else
	    echo "HTML files already exist, skipping archive unpacking" 1>&2
	fi
	;;
    abort-upgrade|abort-remove|abort-deconfigure)
	rm -rf ${DOCDIR}/clm  ${DOCDIR}/cltl2.html  ${DOCDIR}/digital_press  ${DOCDIR}/README
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

# Automatically added by dh_installdeb/11.5.3
dpkg-maintscript-helper rm_conffile /etc/emacs/site-start.d/60cltl.el 1.0.30\~ -- "$@"
# End automatically added section


exit 0


