#!/bin/sh
set -e

adduser --system --group --home / --no-create-home cockpit-ws

if ! dpkg-statoverride --list /usr/lib/cockpit/cockpit-session >/dev/null; then
    dpkg-statoverride --update --add root cockpit-ws 4750 /usr/lib/cockpit/cockpit-session
fi

# Automatically added by dh_systemd_enable/10.10.9
# This will only remove masks created by d-s-h on package removal.
deb-systemd-helper unmask 'cockpit.socket' >/dev/null || true

# was-enabled defaults to true, so new installations run enable.
if deb-systemd-helper --quiet was-enabled 'cockpit.socket'; then
	# Enables the unit on first installation, creates new
	# symlinks on upgrades if the unit file has changed.
	deb-systemd-helper enable 'cockpit.socket' >/dev/null || true
else
	# Update the statefile to add new symlinks (if any), which need to be
	# cleaned up on purge. Also remove old symlinks.
	deb-systemd-helper update-state 'cockpit.socket' >/dev/null || true
fi
# End automatically added section
# Automatically added by dh_installinit/10.10.9
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ]; then
	# In case this system is running systemd, we need to ensure that all
	# necessary tmpfiles (if any) are created before starting.
	if [ -d /run/systemd/system ] ; then
		systemd-tmpfiles --create /usr/lib/tmpfiles.d/cockpit-tempfiles.conf >/dev/null || true
	fi
fi
# End automatically added section
# Automatically added by dh_systemd_start/10.10.9
if [ -d /run/systemd/system ]; then
	systemctl --system daemon-reload >/dev/null || true
	deb-systemd-invoke start 'cockpit.socket' >/dev/null || true
fi
# End automatically added section


# restart cockpit.service on package upgrades, if it's already running
if [ -d /run/systemd/system ] && [ -n "$2" ]; then
    deb-systemd-invoke try-restart cockpit.service >/dev/null || true
fi
