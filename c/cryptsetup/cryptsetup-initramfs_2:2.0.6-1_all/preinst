#!/bin/sh

set -e

CONFFILE=/etc/cryptsetup-initramfs/conf-hook
CONF_HOOK_CONTENTS="$(cat <<EOF
#
# Configuration file for the cryptroot initramfs hook.
#

#
# CRYPTSETUP: [ y | n ]
#
# Add cryptsetup and its dependencies to the initramfs image, regardless
# of _this_ machine configuration.  By default, they're only added when
# a device is detected that needs to be unlocked at initramfs stage
# (such as root or resume devices or ones with explicit 'initramfs' flag
# in /etc/crypttab).
# Note: Honoring this setting will be deprecated in the future.  Please
# uninstall the 'cryptsetup-initramfs' package if you don't want the
# cryptsetup initramfs integration.
#

#CRYPTSETUP=

#
# KEYFILE_PATTERN: ...
#
# The value of this variable is interpreted as a shell pattern.
# Matching key files from the crypttab(5) are included in the initramfs
# image.  The associated devices can then be unlocked without manual
# intervention.  (For instance if /etc/crypttab lists two key files
# /etc/keys/{root,swap}.key, you can set KEYFILE_PATTERN="/etc/keys/*.key"
# to add them to the initrd.)
#
# If KEYFILE_PATTERN if null or unset (default) then no key file is
# copied to the initramfs image.
#
# WARNING: If the initramfs image is to include private key material,
# you'll want to create it with a restrictive umask in order to keep
# non-privileged users at bay.  For instance, set UMASK=0077 in
# /etc/initramfs-tools/initramfs.conf
#

#KEYFILE_PATTERN=
EOF
)"
if [ "$1" = "install" -o "$1" = "upgrade" ] &&
    [ -f "$CONFFILE" ] &&
    dpkg --compare-versions -- "${2-}" le '2:2.0.3-1~'; then
    md5sum="$(md5sum "$CONFFILE" | sed -e 's/ .*//')"
    old_md5sum="$(dpkg-query -W -f='${Conffiles}' cryptsetup | \
        sed -n -e "\'^ $CONFFILE ' { s/ obsolete$//; s/.* //; p }")"
    if [ "$md5sum" = "$old_md5sum" ]; then
        printf '%s\n' "$CONF_HOOK_CONTENTS" >"$CONFFILE.dpkg-new"
        mv -f "$CONFFILE.dpkg-new" "$CONFFILE"
    fi
fi


