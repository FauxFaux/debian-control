#!/bin/sh
set -e
case $1 in
    configure)
    if ! getent passwd dhcpcanon >/dev/null ; then
        echo "adding dhcpcanon user..."
        adduser --quiet --system --no-create-home --group \
        --home "/run/dhcpcanon" \
        --gecos 'dhcpcanon system user,,,' \
        dhcpcanon
    fi
    ;;
esac


# Automatically added by dh_python3:
if which py3compile >/dev/null 2>&1; then
	py3compile -p dhcpcanon 
fi

# End automatically added section
# Automatically added by dh_systemd_enable/10.8
# This will only remove masks created by d-s-h on package removal.
deb-systemd-helper unmask dhcpcanon.service >/dev/null || true

# was-enabled defaults to true, so new installations run enable.
if deb-systemd-helper --quiet was-enabled dhcpcanon.service; then
	# Enables the unit on first installation, creates new
	# symlinks on upgrades if the unit file has changed.
	deb-systemd-helper enable dhcpcanon.service >/dev/null || true
else
	# Update the statefile to add new symlinks (if any), which need to be
	# cleaned up on purge. Also remove old symlinks.
	deb-systemd-helper update-state dhcpcanon.service >/dev/null || true
fi
# End automatically added section
# Automatically added by dh_installinit/10.8
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ]; then
	# In case this system is running systemd, we need to ensure that all
	# necessary tmpfiles (if any) are created before starting.
	if [ -d /run/systemd/system ] ; then
		systemd-tmpfiles --create /usr/lib/tmpfiles.d/dhcpcanon.conf >/dev/null || true
	fi
fi
# End automatically added section
# Automatically added by dh_systemd_start/10.8
if [ -d /run/systemd/system ]; then
	systemctl --system daemon-reload >/dev/null || true
	deb-systemd-invoke start dhcpcanon.service >/dev/null || true
fi
# End automatically added section


exit 0
