#! /bin/sh

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <r>overwrit>r> <new-version>
# for details, see /usr/share/doc/packaging-manual/

set -e

[ -f /usr/share/debconf/confmodule ] && . /usr/share/debconf/confmodule

case "$1" in
    remove|purge)
        if [ "$1" = "remove" ]; then
            # Remove: delete all the application files.
            rm -rf /usr/share/dotlrn
        else
            # Purge: delete config, log and content repository files. 
            rm -rf /etc/dotlrn /var/log/aolserver4/dotlrn /var/lib/dotlrn
            if which ucf >/dev/null; then
                ucf --purge /etc/dotlrn/config.local
            fi
            if which ucfr >/dev/null; then
                ucfr --purge dotlrn /etc/dotlrn/config.local
            fi
            rm -f /etc/aolserver4/conf.d/dotlrn.tcl /etc/aolserver4/conf.d/dotlrn.sh
        fi

        # Reload aolserver after removal, only if it's already running
        [ -f /var/run/aolserver4/dotlrn.pid ] && invoke-rc.d aolserver4 reload
    ;;

    upgrade|failed-upgrade|abort-install|abort-upgrade|disappear)
    ;;

    *)
        echo "postrm called with unknown argument \`$1'" >&2
        exit 0
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

# Automatically added by dh_installdebconf
if [ "$1" = purge ] && [ -e /usr/share/debconf/confmodule ]; then
	. /usr/share/debconf/confmodule
	db_purge
fi
# End automatically added section


db_stop

exit 0

