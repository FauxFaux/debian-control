#!/bin/sh

set -e

. /usr/share/debconf/confmodule

cp /usr/share/dyfi/dyfi-update.conf /etc/dyfi-update.conf

db_get dyfi/username
sed -i "s/^User.*/User $RET/" /etc/dyfi-update.conf

db_get dyfi/password
sed -i "s/^Password.*/Password $RET/" /etc/dyfi-update.conf

db_get dyfi/hosts
sed -i "s/^Hosts.*/Hosts $RET/" /etc/dyfi-update.conf

case "$1" in
  configure)
    if ! getent passwd dyfi > /dev/null; then
        adduser --quiet \
                --system \
                --group \
                --no-create-home \
                --home /nonexistent \
                --disabled-password \
                dyfi
    fi
    touch /var/log/dyfi-update.log
    chown -R dyfi:dyfi /usr/share/dyfi /var/log/dyfi-update.log /etc/dyfi-update.conf
    chmod o-r /etc/dyfi-update.conf
  ;;
esac
# Automatically added by dh_systemd_enable
# This will only remove masks created by d-s-h on package removal.
deb-systemd-helper unmask dyfi.service >/dev/null || true

# was-enabled defaults to true, so new installations run enable.
if deb-systemd-helper --quiet was-enabled dyfi.service; then
	# Enables the unit on first installation, creates new
	# symlinks on upgrades if the unit file has changed.
	deb-systemd-helper enable dyfi.service >/dev/null || true
else
	# Update the statefile to add new symlinks (if any), which need to be
	# cleaned up on purge. Also remove old symlinks.
	deb-systemd-helper update-state dyfi.service >/dev/null || true
fi
# End automatically added section
# Automatically added by dh_installinit
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ]; then
	if [ -x "/etc/init.d/dyfi" ]; then
		update-rc.d dyfi defaults >/dev/null
		invoke-rc.d dyfi start || exit $?
	fi
fi
# End automatically added section

