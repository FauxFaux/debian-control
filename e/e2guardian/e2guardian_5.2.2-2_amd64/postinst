#! /bin/sh

set -e

logdir="/var/log/e2guardian"

mkdir -p "${logdir}"

if ! id -u e2guardian > /dev/null 2>&1 ; then
	adduser --system --group \
	    --disabled-login \
	    --gecos "e2guardian User" \
	    --home "${logdir}" \
	    --no-create-home \
	    --shell "/bin/sh" \
	    e2guardian
fi

### set correct permissions on the log directory and its files

chown "e2guardian:e2guardian" "$logdir"
chmod u=rwx "$logdir"

chown "e2guardian:e2guardian" "$logdir/"* 2>/dev/null || true
chmod u=rw "$logdir/"* 2>/dev/null || true

# Automatically added by dh_installinit/11.5.3
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if [ -x "/etc/init.d/e2guardian" ]; then
		update-rc.d e2guardian defaults >/dev/null
		if [ -n "$2" ]; then
			_dh_action=restart
		else
			_dh_action=start
		fi
		invoke-rc.d e2guardian $_dh_action || init_failed
	fi
fi
# End automatically added section
# Automatically added by dh_installsystemd/11.5.3
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	# This will only remove masks created by d-s-h on package removal.
	deb-systemd-helper unmask 'e2guardian.service' >/dev/null || true

	# was-enabled defaults to true, so new installations run enable.
	if deb-systemd-helper --quiet was-enabled 'e2guardian.service'; then
		# Enables the unit on first installation, creates new
		# symlinks on upgrades if the unit file has changed.
		deb-systemd-helper enable 'e2guardian.service' >/dev/null || true
	else
		# Update the statefile to add new symlinks (if any), which need to be
		# cleaned up on purge. Also remove old symlinks.
		deb-systemd-helper update-state 'e2guardian.service' >/dev/null || true
	fi
fi
# End automatically added section

