#! /bin/sh
# postrm script for ez-ipupdate
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <r>overwrit>r> <new-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

# Automatically added by dh_installdebconf
if [ "$1" = purge ] && [ -e /usr/share/debconf/confmodule ]; then
	. /usr/share/debconf/confmodule
	db_purge
fi
# End automatically added section
# Automatically added by dh_installinit
if [ "$1" = "purge" ] ; then
	update-rc.d ez-ipupdate remove >/dev/null
fi


# In case this system is running systemd, we make systemd reload the unit files
# to pick up changes.
if [ -d /run/systemd/system ] ; then
	systemctl --system daemon-reload >/dev/null || true
fi
# End automatically added section


remove_var_run() {
    # Delete the user account, if it exists
    if id ez-ipupd 2>/dev/null 1>&2 ; then
        deluser ez-ipupd
        # The --remove-home option to deluser requires
        # perl-modules? WTF?
        rm -Rf /var/cache/ez-ipupdate
    fi
    # And remove the directory where the PID files were stored
    rm -rf /var/run/ez-ipupdate
}

case "$1" in
  purge)
    rm -f /etc/ez-ipupdate/default.conf
    remove_var_run
    ;;

  remove)
    remove_var_run
    ;;

  upgrade|failed-upgrade|abort-install|abort-upgrade|disappear)
    ;;

  *)
    echo "postrm called with unknown argument \`$1'" >&2
    exit 1
    ;;

esac

exit 0
