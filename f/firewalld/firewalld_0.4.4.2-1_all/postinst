#!/bin/sh
# postinst script for firewalld
#
# see: dh_installdeb(1)

set -e

case "$1" in
    configure)
	if dpkg --compare-versions "$2" lt-nl "0.3.14.2-2~"; then
            if ! dpkg-statoverride --list /etc/firewalld >/dev/null 2>&1; then
                chmod 0750 /etc/firewalld
            fi
	fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

# Automatically added by dh_systemd_enable
# This will only remove masks created by d-s-h on package removal.
deb-systemd-helper unmask firewalld.service >/dev/null || true

# was-enabled defaults to true, so new installations run enable.
if deb-systemd-helper --quiet was-enabled firewalld.service; then
	# Enables the unit on first installation, creates new
	# symlinks on upgrades if the unit file has changed.
	deb-systemd-helper enable firewalld.service >/dev/null || true
else
	# Update the statefile to add new symlinks (if any), which need to be
	# cleaned up on purge. Also remove old symlinks.
	deb-systemd-helper update-state firewalld.service >/dev/null || true
fi
# End automatically added section

# Automatically added by dh_python3:
if which py3compile >/dev/null 2>&1; then
	py3compile -p firewalld -V 3.2-
fi

# End automatically added section
# Automatically added by dh_installinit
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ]; then
	if [ -x "/etc/init.d/firewalld" ]; then
		update-rc.d firewalld defaults >/dev/null
		if [ -n "$2" ]; then
			_dh_action=restart
		else
			_dh_action=start
		fi
		invoke-rc.d firewalld $_dh_action || exit $?
	fi
fi
# End automatically added section


exit 0
