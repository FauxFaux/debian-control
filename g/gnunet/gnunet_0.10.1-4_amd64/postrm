#!/bin/sh

set -e

pathfind() {
	OLDIFS="$IFS"
	IFS=:
	for p in $PATH; do
		if [ -x "$p/$*" ]; then
			IFS="$OLDIFS"
			return 0
		fi
	done
	IFS="$OLDIFS"
	return 1
}

case "${1}" in
	purge)
		if [ -e /usr/share/debconf/confmodule ]
		then
			. /usr/share/debconf/confmodule
			db_version 2.0

			db_get gnunet-server/username
			_USERNAME="${RET:-gnunet}"

			db_get gnunet-server/groupname
			_GROUPNAME="${RET:-gnunet}"
		else
			_USERNAME="gnunet"
			_GROUPNAME="gnunet"
		fi

		GNUNETDNS_GROUP="gnunetdns"

		if pathfind deluser
		then
			deluser --quiet --system ${_USERNAME} || true
		fi

		if pathfind delgroup
		then
			delgroup --quiet --system --only-if-empty ${_GROUPNAME} || true
			delgroup --quiet --system --only-if-empty ${GNUNETDNS_GROUP} || true
		fi

		rm -rf /var/log/gnunetd /var/lib/gnunet /etc/default/gnunet
		;;

	remove|upgrade|failed-upgrade|abort-install|abort-upgrade|disappear)

		;;

	*)
		echo "postrm called with unknown argument \`${1}'" >&2
		exit 1
		;;
esac

# Automatically added by dh_installinit
if [ "$1" = "purge" ] ; then
	update-rc.d gnunet remove >/dev/null
fi


# In case this system is running systemd, we make systemd reload the unit files
# to pick up changes.
if [ -d /run/systemd/system ] ; then
	systemctl --system daemon-reload >/dev/null || true
fi
# End automatically added section
# Automatically added by dh_installdebconf
if [ "$1" = purge ] && [ -e /usr/share/debconf/confmodule ]; then
	. /usr/share/debconf/confmodule
	db_purge
fi
# End automatically added section


exit 0
