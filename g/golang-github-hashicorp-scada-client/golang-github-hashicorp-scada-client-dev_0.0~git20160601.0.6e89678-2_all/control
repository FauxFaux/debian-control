Package: golang-github-hashicorp-scada-client-dev
Source: golang-github-hashicorp-scada-client
Version: 0.0~git20160601.0.6e89678-2
Architecture: all
Maintainer: Debian Go Packaging Team <pkg-go-maintainers@lists.alioth.debian.org>
Installed-Size: 90
Depends: golang-github-armon-go-metrics-dev, golang-github-hashicorp-net-rpc-msgpackrpc-dev, golang-github-hashicorp-yamux-dev
Section: devel
Priority: extra
Homepage: https://github.com/hashicorp/scada-client
Description: Golang client to the HashiCorp SCADA system
 This library provides a Golang client for the HashiCorp SCADA service. SCADA
 stands for Supervisory Control And Data Acquisition, and as the name implies it
 allows Atlas to provide control functions and request data from the tools that
 integrate.
 .
 The technical details about how SCADA works are fairly simple. Clients first
 open a connection to the SCADA service at scada.hashicorp.com on port 7223.
 This connection is secured by TLS, allowing clients to verify the identity of
 the servers and to encrypt all communications. Once connected, a handshake is
 performed where a client provides it's Atlas API credentials so that Atlas can
 verify the client identity. Once complete, clients keep the connection open in
 an idle state waiting for commands to be received. Commands map to APIs exposed
 by the product, and are subject to any ACLs, authentication or authorization
 mechanisms of the client.
 .
 This library is used in various HashiCorp products to integrate with the SCADA
 system.
 .
 This package contains the source.
