Package: golang-github-jacobsa-fuse-dev
Source: golang-github-jacobsa-fuse
Version: 0.0~git20150806.0.9a7512a-4
Architecture: all
Maintainer: pkg-go <pkg-go-maintainers@lists.alioth.debian.org>
Installed-Size: 401
Depends: golang-github-jacobsa-bazilfuse-dev, golang-github-jacobsa-oglematchers-dev, golang-github-jacobsa-ogletest-dev, golang-github-jacobsa-reqtrace-dev, golang-github-jacobsa-syncutil-dev, golang-github-jacobsa-timeutil-dev, golang-golang-x-net-dev, golang-golang-x-sys-dev
Section: devel
Priority: extra
Homepage: https://github.com/jacobsa/fuse
Description: writing and mounting user-space file systems from Go
 This package allows for writing and mounting user-space file systems from Go.
 It is a wrapper around bazil.org/fuse, which does the heavy lifting. It does
 not make use of the bazil.org/fuse/fs sub-package, which allows for something
 like an object-orientend representation of files and directories, and contains
 a decent amount of canned behavior.
 .
 The chief improvements and/or differences from the bazil.org packages are:
 .
  * No surprises in the form of magic/default behaviors. You must provide an
    implementation for every method in the interface. Embed a
    fuseutil.NotImplementedFileSystem struct to have default implementations
    that return ENOSYS.
 .
  * Every method, struct, and field is thoroughly documented. This may help you
    get your bearings in the world of FUSE, the Linux VFS, traditional file
    system implementations, etc., all of which tend to be very poorly
    documented.
 .
  * Support for arbitrary offsets in directory entries returned by ReadDir.
    (The bazil.org package assumes that offsets must be counts of bytes.)
 .
 The very large disadvantage over using the bazil.org packages is that many
 features have not yet been exposed.
