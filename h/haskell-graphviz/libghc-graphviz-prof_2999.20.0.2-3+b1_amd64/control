Package: libghc-graphviz-prof
Source: haskell-graphviz (2999.20.0.2-3)
Version: 2999.20.0.2-3+b1
Architecture: amd64
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Installed-Size: 37504
Depends: libghc-graphviz-dev (= 2999.20.0.2-3+b1), libghc-base-prof-4.11.1.0-5dd74, libghc-bytestring-prof-0.10.8.2-76891, libghc-colour-prof-2.3.4-6502f, libghc-containers-prof-0.5.11.0-e0faa, libghc-directory-prof-1.3.1.5-a6230, libghc-dlist-prof-0.8.0.4-2988c, libghc-fgl-prof-5.6.0.0-85e62, libghc-filepath-prof-1.4.2-27f5e, libghc-mtl-prof-2.2.2-28a8b, libghc-polyparse-prof-1.12-7eb93, libghc-process-prof-1.6.3.0-5105e, libghc-temporary-prof-1.3-e5b44, libghc-text-prof-1.2.3.1-30bbe, libghc-wl-pprint-text-prof-1.2.0.0-b64ce
Provides: libghc-graphviz-prof-2999.20.0.2-28302
Section: haskell
Priority: optional
Homepage: http://projects.haskell.org/graphviz/
Description: bindings to Graphviz for graph visualization; profiling libraries
 This library provides bindings for the Dot language used by the
 Graphviz (http://graphviz.org/) suite of programs for visualising
 graphs, as well as functions to call those programs.
 .
 Main features of the graphviz library include:
 .
 Almost complete coverage of all Graphviz attributes and syntax.
 .
 Support for specifying clusters.
 .
 The ability to use a custom node type.
 .
 Functions for running a Graphviz layout tool with all specified output
 types.
 .
 The ability to not only generate but also parse Dot code with two
 options: strict and liberal (in terms of ordering of statements).
 .
 Functions to convert FGL graphs and other graph-like data structures
 to Dot code - including support to group them into clusters - with a
 high degree of customisation by specifying which attributes to use
 and limited support for the inverse operation.
 .
 Round-trip support for passing an FGL graph through Graphviz to
 augment node and edge labels with positional information, etc.
 .
 This package provides a library for the Haskell programming language, compiled
 for profiling.  See http://www.haskell.org/ for more information on Haskell.
