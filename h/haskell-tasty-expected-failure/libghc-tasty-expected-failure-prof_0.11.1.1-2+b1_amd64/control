Package: libghc-tasty-expected-failure-prof
Source: haskell-tasty-expected-failure (0.11.1.1-2)
Version: 0.11.1.1-2+b1
Architecture: amd64
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Installed-Size: 85
Depends: libghc-tasty-expected-failure-dev (= 0.11.1.1-2+b1), libghc-base-prof-4.11.1.0-5dd74, libghc-tagged-prof-0.8.5-16742, libghc-tasty-prof-1.1.0.3-29854
Provides: libghc-tasty-expected-failure-prof-0.11.1.1-4502b
Section: haskell
Priority: optional
Homepage: https://github.com/nomeata/tasty-expected-failure
Description: mark tasty tests as failure-expected; profiling libraries
 With the function 'expectFail' in the provided module
 Test.Tasty.ExpectedFailure, you can mark that you expect
 test cases to fail, and not to pass.
 .
 This can for example be used for test-driven development: Create the
 tests, mark them with 'Test.Tasty.ExpectedFailure.expectFail', and
 you can still push to the main branch, without your continuous
 integration branch failing.
 .
 Once someone implements the feature or fixes the bug (maybe
 unknowingly), the test suite will tell him so, due to the now
 unexpectedly passing test, and he can remove the
 'Test.Tasty.ExpectedFailure.expectFail' marker.
 .
 The module also provides 'Test.Tasty.ExpectedFailure.ignoreTest' to
 avoid running a test. Both functions are implemented via the more
 general 'Test.Tasty.ExpectedFailure.wrapTest', which is also
 provided.
 .
 This package provides a library for the Haskell programming language, compiled
 for profiling.  See http://www.haskell.org/ for more information on Haskell.
