#! /bin/sh
# postinst script for havp
#
# see: dh_installdeb(1)

init_error() {
echo "E: Error starting service (could be due to port 8080 already in use), ignoring..."
}

CONFIGFILE=/etc/default/havp

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#

. /usr/share/debconf/confmodule

case "$1" in
    configure)
      # create havp group and user
      if ! getent group havp >/dev/null; then
        addgroup --system havp || true
      fi
      if ! getent passwd havp >/dev/null; then
        adduser --quiet --system --no-create-home \
        --home /var/run/havp --ingroup havp havp || true
      fi
      # care for proper ownership in any case (e.g. updating from an earlier
      # havp package with different paths)
      chown havp:havp /var/log/havp
      chown havp:havp /var/lib/havp
      chown havp:havp /var/spool/havp

    if [ ! -e $CONFIGFILE ]; then
      echo "# Use a loopback mount for the scanner files?" > $CONFIGFILE
      echo "USE_LOOPBACK=" >> $CONFIGFILE
    fi

    db_get havp/loopback_mount
    # restore if it's no longer there
    cp -a -f $CONFIGFILE $CONFIGFILE.tmp
    grep -Eq '^ *USE_LOOPBACK=' $CONFIGFILE || echo "USE_LOOPBACK=" >> $CONFIGFILE
    # set
    sed -e "s/^ *USE_LOOPBACK=.*/USE_LOOPBACK=\"$RET\"/" < $CONFIGFILE > $CONFIGFILE.tmp
    mv -f $CONFIGFILE.tmp $CONFIGFILE
    if [ "$RET" = "true" ]; then

      havp_dir=/var/lib/havp
      havp_loopback=$havp_dir/havp.loop
      havp_mountpoint=/var/spool/havp

      if [ -f $havp_loopback ]; then
        echo "There is already "$havp_loopback", maybe from an earlier or custom installation, not building loopback-device"
      else
        db_get havp/loopback_size
        havp_loopsize=`expr $RET \* 1024`
        echo -n "Using "$havp_loopsize" kilobytes for building loopback-device "$havp_loopback" with mandatory locks, this MAY take a little while so please be patient... "

        dd if=/dev/zero of=$havp_loopback bs=1024 count=$havp_loopsize >/dev/null 2>&1
        mkfs.ext2 -F $havp_loopback >/dev/null 2>&1
        echo "building loopback-device finished!"
      fi
    fi
    # finished with debconf, close properly...
    db_stop

    ;;

    abort-upgrade|abort-remove|abort-deconfigure)

    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

# Automatically added by dh_installinit/11.3.3
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if [ -x "/etc/init.d/havp" ]; then
		update-rc.d havp defaults >/dev/null
		if [ -n "$2" ]; then
			_dh_action=restart
		else
			_dh_action=start
		fi
		invoke-rc.d havp $_dh_action || init_error
	fi
fi
# End automatically added section


exit 0
