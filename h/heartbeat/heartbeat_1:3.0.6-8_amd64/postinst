#!/bin/sh
#
# License: GNU General Public License (GPL)
#
# postinst script for heartbeat
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
#

case "$1" in
    configure)
	if ! getent group haclient > /dev/null ; then
		addgroup --system --group haclient > /dev/null
	fi
	if ! getent passwd hacluster > /dev/null ; then
		adduser --system --no-create-home \
			--ingroup haclient \
			--gecos "Heartbeat System Account" \
			--no-create-home --disabled-login \
			--home /usr/lib/heartbeat --shell /bin/false  \
			--disabled-password hacluster > /dev/null
	fi

	for i in /var/lib/heartbeat/ccm /var/lib/heartbeat/crm \
			/var/run/heartbeat/ccm /var/run/heartbeat/crm \
			/var/lib/heartbeat/pengine; do
		mkdir -p $i
		chmod 750 $i
		chown hacluster $i
		chgrp haclient $i
	done

	# prepare agent state dir
	mkdir -p /var/run/resource-agents
	chmod 755 /var/run/resource-agents

	chgrp haclient /usr/bin/cl_status
	chmod 2555 /usr/bin/cl_status

	for i in root nobody hacluster; do
		chmod 700 /var/lib/heartbeat/cores/$i
		chown $i /var/lib/heartbeat/cores/$i
		chgrp root /var/lib/heartbeat/cores/$i
	done
	
	# Do we want to move the old S20 symlinks to S75 ones?
	if [ -n "$2" ] ; then
	  if `dpkg --compare-versions "$2" lt 1.0.4-2`; then
            # use debconf
            . /usr/share/debconf/confmodule
	    db_get heartbeat/change_init || RET="false"
	    if [ "$RET" = "true" ]; then
	      update-rc.d -f heartbeat remove > /dev/null
	    fi
            db_stop
	  fi
        fi
	update-rc.d heartbeat start 75 2 3 4 5 . stop 05 0 1 6 . >/dev/null || true

	if which invoke-rc.d >/dev/null 2>&1; then
		invoke-rc.d heartbeat start || true
	else
		/etc/init.d/heartbeat start || true
	fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
	# restart heartbeat
	if which invoke-rc.d >/dev/null 2>&1; then
		invoke-rc.d heartbeat start || true
	else
		/etc/init.d/heartbeat start || true
	fi
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 0
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

# Automatically added by dh_installsystemd/11.2.1
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	# In case this system is running systemd, we need to ensure that all
	# necessary tmpfiles (if any) are created before starting.
	if [ -d /run/systemd/system ] ; then
		systemd-tmpfiles --create /usr/lib/tmpfiles.d/heartbeat.conf >/dev/null || true
	fi
fi
# End automatically added section

# Automatically added by dh_python2:
if which pycompile >/dev/null 2>&1; then
	pycompile -p heartbeat /usr/share/heartbeat -V 2.6-
fi

# End automatically added section
# Automatically added by dh_installsystemd/11.2.1
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	# This will only remove masks created by d-s-h on package removal.
	deb-systemd-helper unmask 'heartbeat.service' >/dev/null || true

	# was-enabled defaults to true, so new installations run enable.
	if deb-systemd-helper --quiet was-enabled 'heartbeat.service'; then
		# Enables the unit on first installation, creates new
		# symlinks on upgrades if the unit file has changed.
		deb-systemd-helper enable 'heartbeat.service' >/dev/null || true
	else
		# Update the statefile to add new symlinks (if any), which need to be
		# cleaned up on purge. Also remove old symlinks.
		deb-systemd-helper update-state 'heartbeat.service' >/dev/null || true
	fi
fi
# End automatically added section


exit 0
