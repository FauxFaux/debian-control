#! /bin/sh
# postinst script for hyperspec
#
# see: dh_installdeb(1)

set -e

. /usr/share/debconf/confmodule

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see /usr/share/doc/packaging-manual/
#
# quoting from the policy:
#     Any necessary prompting should almost always be confined to the
#     post-installation script, and should be protected with a conditional
#     so that unnecessary prompting doesn't happen if a package's
#     installation fails and the `postinst' is called with `abort-upgrade',
#     `abort-remove' or `abort-deconfigure'.

FILE=/root/tmp/HyperSpec-7-0.tar.gz
OLD_INDEX=/usr/share/doc/hyperspec/FrontMatter/index.html
NEW_INDEX=/usr/share/doc/hyperspec/Front/index.htm

export OLD_INDEX NEW_INDEX

clean_directory()
{
    rm -rf  /usr/share/doc/hyperspec/Body /usr/share/doc/hyperspec/Data \
	/usr/share/doc/hyperspec/FrontMatter \
	/usr/share/doc/hyperspec/Graphics \
	/usr/share/doc/hyperspec/HyperSpec \
	/usr/share/doc/hyperspec/HyperSpec-Legalese.text \
	/usr/share/doc/hyperspec/Issues \
	/usr/share/doc/hyperspec/Front || true
}

is_current_version()
{
    # returns true if the installed  version is current
    if [ -f $OLD_INDEX -o -f $NEW_INDEX ] ; then
        VERSION=$(grep '<!-- Common Lisp HyperSpec (TM), version '  \
	    "${OLD_INDEX}" "${NEW_INDEX}"  \
	    2> /dev/null | sed 's/.*version //;s/ -->//' | head -n 1)
	if [ "X$VERSION" = "X" ] ; then
	  echo Error in version-checking, please report this as a bug.
	  exit 1
	fi
	if [ "$VERSION" != "7.0" ] ; then
	    # old version, nuke it
	    clean_directory
	    false
	else
	    true
	fi
    else
        false
    fi
}

check_archive()
{    
    # check if the file is ok
    if [ -s "$FILE" ] && \
	gzip --test --quiet  "$FILE" > /dev/null 2>&1 ; then
	true
    else
	rm -f  "$FILE"
	false
    fi
}

download_file()
{
    echo "Downloading the hyperspec from the Internet" 1>&2
    mkdir -p /root/tmp && \
	wget --directory-prefix=/root/tmp --passive \
             ftp://ftp.lispworks.com/pub/software_tools/reference/HyperSpec-7-0.tar.gz 
}

download_hyperspec()
{
  if check_archive; then
      echo Using the local file "$FILE"
      return 0
  fi
  db_get hyperspec/downloading
  if [ "${RET}" = "true" ]; then
     until download_file
     do
      db_reset hyperspec/tryagain
      db_input medium hyperspec/tryagain || \
          if [ "$?" = 30 ]; then
	      echo "Unable to download and can't ask whether to try again." 1>&2
	      exit 1
          else
              true
          fi
      db_go || true
      db_get hyperspec/tryagain
      if [ "${RET}" != "true" ]; then
	  echo "Unable to download and you don't want to try again." 1>&2
	  exit 1;
      fi
    done
  else
    echo "Downloaded archive not present, but not downloading." 1>&2
    exit 0;
  fi
}

case "$1" in
    configure) 
	if is_current_version ; then
	   echo Your Hyperspec documentation is current.
	   if [ -d /usr/share/doc/hyperspec/HyperSpec/Data/ ] ; then
	   	echo Found broken old installation, correcting
		rm -rf /usr/share/doc/hyperspec/HyperSpec
 	   fi
	else
	   echo No or old version of the hyperspec found. Getting newer version
	   clean_directory
	   download_hyperspec
	   (cd /usr/share/doc/hyperspec &&
	       tar zxf ${FILE} --no-same-owner --no-same-permissions &&
	       mv HyperSpec/* . )
	   rmdir /usr/share/doc/hyperspec/HyperSpec
	fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
	clean_directory
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 0
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.



exit 0


