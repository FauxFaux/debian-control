#!/bin/sh
# Debian postinstall script
#
# see: dh_installdeb(1)
set -e
case "$1" in
	configure)
		sbindir=/usr/bin
		vardir=/var/lib/ipmiutil
		sensorout=$vardir/sensor_out.txt

		mkdir -p $vardir

		# Run some ipmiutil command to see if any IPMI interface works.
		IPMIcmd=true
		$sbindir/ipmiutil sel -v >/dev/null 2>&1 || IPMIcmd=false

		# If IPMIcmd is still true, then the IPMI command was successful, and IPMI is enabled locally.
		if $IPMIcmd ; then
			# Capture a snapshot of IPMI sensor data once now for later reuse.
			if [ ! -f $sensorout ]; then
				$sbindir/ipmiutil sensor -q >$sensorout
			fi
		fi
	;;

	abort-upgrade|abort-remove|abort-deconfigure)
	;;

	*)
		echo "postinst called with unknown argument \`$1'" >&2
		exit 1
	;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

# Automatically added by dh_installdeb/11.3.5
dpkg-maintscript-helper rm_conffile /etc/init.d/ipmi_port 3.0.0-3\~ -- "$@"
dpkg-maintscript-helper rm_conffile /etc/init.d/ipmiutil_asy 3.0.0-3\~ -- "$@"
dpkg-maintscript-helper rm_conffile /etc/init.d/ipmiutil_evt 3.0.0-3\~ -- "$@"
dpkg-maintscript-helper rm_conffile /etc/init.d/ipmiutil_wdt 3.0.0-3\~ -- "$@"
# End automatically added section
# Automatically added by dh_installsystemd/11.3.5
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	# This will only remove masks created by d-s-h on package removal.
	deb-systemd-helper unmask 'ipmiutil_wdt.service' >/dev/null || true

	# was-enabled defaults to true, so new installations run enable.
	if deb-systemd-helper --quiet was-enabled 'ipmiutil_wdt.service'; then
		# Enables the unit on first installation, creates new
		# symlinks on upgrades if the unit file has changed.
		deb-systemd-helper enable 'ipmiutil_wdt.service' >/dev/null || true
	else
		# Update the statefile to add new symlinks (if any), which need to be
		# cleaned up on purge. Also remove old symlinks.
		deb-systemd-helper update-state 'ipmiutil_wdt.service' >/dev/null || true
	fi
fi
# End automatically added section
# Automatically added by dh_installsystemd/11.3.5
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if [ -d /run/systemd/system ]; then
		systemctl --system daemon-reload >/dev/null || true
		if [ -n "$2" ]; then
			_dh_action=restart
		else
			_dh_action=start
		fi
		deb-systemd-invoke $_dh_action 'ipmiutil_wdt.service' >/dev/null || true
	fi
fi
# End automatically added section
# Automatically added by dh_installsystemd/11.3.5
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if deb-systemd-helper debian-installed 'ipmi_port.service'; then
		# This will only remove masks created by d-s-h on package removal.
		deb-systemd-helper unmask 'ipmi_port.service' >/dev/null || true

		if deb-systemd-helper --quiet was-enabled 'ipmi_port.service'; then
			# Create new symlinks, if any.
			deb-systemd-helper enable 'ipmi_port.service' >/dev/null || true
		fi
	fi

	# Update the statefile to add new symlinks (if any), which need to be cleaned
	# up on purge. Also remove old symlinks.
	deb-systemd-helper update-state 'ipmi_port.service' >/dev/null || true
fi
# End automatically added section
# Automatically added by dh_installsystemd/11.3.5
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if [ -d /run/systemd/system ]; then
		systemctl --system daemon-reload >/dev/null || true
		if [ -n "$2" ]; then
			deb-systemd-invoke try-restart 'ipmi_port.service' >/dev/null || true
		fi
	fi
fi
# End automatically added section
# Automatically added by dh_installsystemd/11.3.5
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if deb-systemd-helper debian-installed 'ipmiutil_asy.service'; then
		# This will only remove masks created by d-s-h on package removal.
		deb-systemd-helper unmask 'ipmiutil_asy.service' >/dev/null || true

		if deb-systemd-helper --quiet was-enabled 'ipmiutil_asy.service'; then
			# Create new symlinks, if any.
			deb-systemd-helper enable 'ipmiutil_asy.service' >/dev/null || true
		fi
	fi

	# Update the statefile to add new symlinks (if any), which need to be cleaned
	# up on purge. Also remove old symlinks.
	deb-systemd-helper update-state 'ipmiutil_asy.service' >/dev/null || true
fi
# End automatically added section
# Automatically added by dh_installsystemd/11.3.5
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if [ -d /run/systemd/system ]; then
		systemctl --system daemon-reload >/dev/null || true
		if [ -n "$2" ]; then
			deb-systemd-invoke try-restart 'ipmiutil_asy.service' >/dev/null || true
		fi
	fi
fi
# End automatically added section
# Automatically added by dh_installsystemd/11.3.5
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if deb-systemd-helper debian-installed 'ipmiutil_evt.service'; then
		# This will only remove masks created by d-s-h on package removal.
		deb-systemd-helper unmask 'ipmiutil_evt.service' >/dev/null || true

		if deb-systemd-helper --quiet was-enabled 'ipmiutil_evt.service'; then
			# Create new symlinks, if any.
			deb-systemd-helper enable 'ipmiutil_evt.service' >/dev/null || true
		fi
	fi

	# Update the statefile to add new symlinks (if any), which need to be cleaned
	# up on purge. Also remove old symlinks.
	deb-systemd-helper update-state 'ipmiutil_evt.service' >/dev/null || true
fi
# End automatically added section
# Automatically added by dh_installsystemd/11.3.5
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if [ -d /run/systemd/system ]; then
		systemctl --system daemon-reload >/dev/null || true
		if [ -n "$2" ]; then
			deb-systemd-invoke try-restart 'ipmiutil_evt.service' >/dev/null || true
		fi
	fi
fi
# End automatically added section


exit 0
