#!/bin/sh

set -e

case "$1" in
    configure)
        if ! getent passwd kube > /dev/null 2>&1 ; then
            adduser --quiet --system --group --disabled-login --no-create-home --home /nonexistent kube
        fi
    ;;
esac

# Automatically added by dh_installinit/10.9
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ]; then
	# In case this system is running systemd, we need to ensure that all
	# necessary tmpfiles (if any) are created before starting.
	if [ -d /run/systemd/system ] ; then
		systemd-tmpfiles --create /usr/lib/tmpfiles.d/kubernetes-node.conf >/dev/null || true
	fi
fi
# End automatically added section
# Automatically added by dh_installinit/10.9
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ]; then
	if [ -x "/etc/init.d/kube-proxy" ]; then
		update-rc.d kube-proxy defaults >/dev/null
		invoke-rc.d kube-proxy start || exit $?
	fi
fi
# End automatically added section
# Automatically added by dh_installinit/10.9
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ]; then
	# In case this system is running systemd, we need to ensure that all
	# necessary tmpfiles (if any) are created before starting.
	if [ -d /run/systemd/system ] ; then
		systemd-tmpfiles --create /usr/lib/tmpfiles.d/kubernetes-node.conf >/dev/null || true
	fi
fi
# End automatically added section
# Automatically added by dh_installinit/10.9
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ]; then
	if [ -x "/etc/init.d/kubelet" ]; then
		update-rc.d kubelet defaults >/dev/null
		invoke-rc.d kubelet start || exit $?
	fi
fi
# End automatically added section
# Automatically added by dh_installinit/10.9
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ]; then
	# In case this system is running systemd, we need to ensure that all
	# necessary tmpfiles (if any) are created before starting.
	if [ -d /run/systemd/system ] ; then
		systemd-tmpfiles --create /usr/lib/tmpfiles.d/kubernetes-node.conf >/dev/null || true
	fi
fi
# End automatically added section

