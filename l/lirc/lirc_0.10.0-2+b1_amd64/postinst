#!/bin/sh

set -e

rm -f /etc/init.d/lirc

systemd-tmpfiles --create /usr/lib/tmpfiles.d/lirc.conf || :

for f in lircd.conf lircmd.conf irexec.lircrc lirc_options.conf; do
    test -e /etc/lirc/$f || cp /etc/lirc/${f}.dist /etc/lirc/$f || :
done


# Automatically added by dh_systemd_enable/10.9.1
# This will only remove masks created by d-s-h on package removal.
deb-systemd-helper unmask 'irexec.service' >/dev/null || true

# was-enabled defaults to true, so new installations run enable.
if deb-systemd-helper --quiet was-enabled 'irexec.service'; then
	# Enables the unit on first installation, creates new
	# symlinks on upgrades if the unit file has changed.
	deb-systemd-helper enable 'irexec.service' >/dev/null || true
else
	# Update the statefile to add new symlinks (if any), which need to be
	# cleaned up on purge. Also remove old symlinks.
	deb-systemd-helper update-state 'irexec.service' >/dev/null || true
fi
# End automatically added section
# Automatically added by dh_systemd_enable/10.9.1
# This will only remove masks created by d-s-h on package removal.
deb-systemd-helper unmask 'lircd-setup.service' >/dev/null || true

# was-enabled defaults to true, so new installations run enable.
if deb-systemd-helper --quiet was-enabled 'lircd-setup.service'; then
	# Enables the unit on first installation, creates new
	# symlinks on upgrades if the unit file has changed.
	deb-systemd-helper enable 'lircd-setup.service' >/dev/null || true
else
	# Update the statefile to add new symlinks (if any), which need to be
	# cleaned up on purge. Also remove old symlinks.
	deb-systemd-helper update-state 'lircd-setup.service' >/dev/null || true
fi
# End automatically added section
# Automatically added by dh_systemd_enable/10.9.1
# This will only remove masks created by d-s-h on package removal.
deb-systemd-helper unmask 'lircd-uinput.service' >/dev/null || true

# was-enabled defaults to true, so new installations run enable.
if deb-systemd-helper --quiet was-enabled 'lircd-uinput.service'; then
	# Enables the unit on first installation, creates new
	# symlinks on upgrades if the unit file has changed.
	deb-systemd-helper enable 'lircd-uinput.service' >/dev/null || true
else
	# Update the statefile to add new symlinks (if any), which need to be
	# cleaned up on purge. Also remove old symlinks.
	deb-systemd-helper update-state 'lircd-uinput.service' >/dev/null || true
fi
# End automatically added section
# Automatically added by dh_systemd_enable/10.9.1
# This will only remove masks created by d-s-h on package removal.
deb-systemd-helper unmask 'lircd.service' >/dev/null || true

# was-enabled defaults to true, so new installations run enable.
if deb-systemd-helper --quiet was-enabled 'lircd.service'; then
	# Enables the unit on first installation, creates new
	# symlinks on upgrades if the unit file has changed.
	deb-systemd-helper enable 'lircd.service' >/dev/null || true
else
	# Update the statefile to add new symlinks (if any), which need to be
	# cleaned up on purge. Also remove old symlinks.
	deb-systemd-helper update-state 'lircd.service' >/dev/null || true
fi
# End automatically added section
# Automatically added by dh_systemd_enable/10.9.1
# This will only remove masks created by d-s-h on package removal.
deb-systemd-helper unmask 'lircd.socket' >/dev/null || true

# was-enabled defaults to true, so new installations run enable.
if deb-systemd-helper --quiet was-enabled 'lircd.socket'; then
	# Enables the unit on first installation, creates new
	# symlinks on upgrades if the unit file has changed.
	deb-systemd-helper enable 'lircd.socket' >/dev/null || true
else
	# Update the statefile to add new symlinks (if any), which need to be
	# cleaned up on purge. Also remove old symlinks.
	deb-systemd-helper update-state 'lircd.socket' >/dev/null || true
fi
# End automatically added section
# Automatically added by dh_systemd_enable/10.9.1
# This will only remove masks created by d-s-h on package removal.
deb-systemd-helper unmask 'lircmd.service' >/dev/null || true

# was-enabled defaults to true, so new installations run enable.
if deb-systemd-helper --quiet was-enabled 'lircmd.service'; then
	# Enables the unit on first installation, creates new
	# symlinks on upgrades if the unit file has changed.
	deb-systemd-helper enable 'lircmd.service' >/dev/null || true
else
	# Update the statefile to add new symlinks (if any), which need to be
	# cleaned up on purge. Also remove old symlinks.
	deb-systemd-helper update-state 'lircmd.service' >/dev/null || true
fi
# End automatically added section

# Automatically added by dh_python3:
if which py3compile >/dev/null 2>&1; then
	py3compile -p lirc /usr/share/lirc
fi

# End automatically added section
# Automatically added by dh_installinit/10.9.1
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ]; then
	# In case this system is running systemd, we need to ensure that all
	# necessary tmpfiles (if any) are created before starting.
	if [ -d /run/systemd/system ] ; then
		systemd-tmpfiles --create /usr/lib/tmpfiles.d/lirc.conf >/dev/null || true
	fi
fi
# End automatically added section
# Automatically added by dh_installinit/10.9.1
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ]; then
	if [ -x "/etc/init.d/lircd" ]; then
		update-rc.d lircd defaults >/dev/null
		if [ -n "$2" ]; then
			_dh_action=restart
		else
			_dh_action=start
		fi
		invoke-rc.d lircd $_dh_action || exit $?
	fi
fi
# End automatically added section
# Automatically added by dh_installinit/10.9.1
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ]; then
	# In case this system is running systemd, we need to ensure that all
	# necessary tmpfiles (if any) are created before starting.
	if [ -d /run/systemd/system ] ; then
		systemd-tmpfiles --create /usr/lib/tmpfiles.d/lirc.conf >/dev/null || true
	fi
fi
# End automatically added section
# Automatically added by dh_installinit/10.9.1
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ]; then
	if [ -x "/etc/init.d/lircmd" ]; then
		update-rc.d lircmd defaults >/dev/null
		if [ -n "$2" ]; then
			_dh_action=restart
		else
			_dh_action=start
		fi
		invoke-rc.d lircmd $_dh_action || exit $?
	fi
fi
# End automatically added section
# Automatically added by dh_installinit/10.9.1
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ]; then
	# In case this system is running systemd, we need to ensure that all
	# necessary tmpfiles (if any) are created before starting.
	if [ -d /run/systemd/system ] ; then
		systemd-tmpfiles --create /usr/lib/tmpfiles.d/lirc.conf >/dev/null || true
	fi
fi
# End automatically added section
# Automatically added by dh_systemd_start/10.9.1
if [ -d /run/systemd/system ]; then
	systemctl --system daemon-reload >/dev/null || true
	if [ -n "$2" ]; then
		_dh_action=try-restart
	else
		_dh_action=start
	fi
	deb-systemd-invoke $_dh_action 'irexec.service' 'lircd-setup.service' 'lircd-uinput.service' >/dev/null || true
fi
# End automatically added section

