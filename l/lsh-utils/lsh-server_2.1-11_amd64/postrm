#!/bin/sh
# postrm script for lsh-server
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <r>overwrit>r> <new-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

if [ -f /usr/share/debconf/confmodule ] ; then
   . /usr/share/debconf/confmodule

   db_get "lsh-server/purge_hostkey" || true

   PURGE_HOSTKEYS="$RET"
fi

case "$1" in
    purge|remove|upgrade|failed-upgrade|abort-install|abort-upgrade|disappear)

	for file in /etc/ssh/NOSERVER /etc/ssh/sshd_not_to_be_run ; do
	    if [ -e "$file" ] && \
		grep -q '^LSH_SERVER_CONFIG_GENERATED$' "$file" ; then
		rm -f "$file"
	    fi
	done

	# Try to remove ssh directory - if ssh is purged we should be
	# able to do this ...
	if [ -d "/etc/ssh" ] ; then
	    rmdir --ignore-fail-on-non-empty /etc/ssh 
	fi

	# Try to remove the random seed file.
	if [ "$1" = "purge" ] && [ -e "/var/spool/lsh/yarrow-seed-file" ] ; then
	   rm -f /var/spool/lsh/yarrow-seed-file
	   rmdir --ignore-fail-on-non-empty /var/spool/lsh
	fi

    ;;

    *)
	echo "postrm called with unknown argument \`$1'" >&2
	exit 1
    ;;
esac

if [ "$1" = "purge" ]; then
   case "$PURGE_HOSTKEYS" in
   true|TRUE|y*|Y*|"")
      rm -f /etc/lsh_host_key /etc/lsh_host_key.pub
      ;;
   esac

   # trash defaults file
   rm -f /etc/default/lsh-server
fi

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts

# Automatically added by dh_installdebconf
if [ "$1" = purge ] && [ -e /usr/share/debconf/confmodule ]; then
	. /usr/share/debconf/confmodule
	db_purge
fi
# End automatically added section
# Automatically added by dh_installinit
if [ "$1" = "purge" ] ; then
	update-rc.d lsh-server remove >/dev/null
fi


# In case this system is running systemd, we make systemd reload the unit files
# to pick up changes.
if [ -d /run/systemd/system ] ; then
	systemctl --system daemon-reload >/dev/null || true
fi
# End automatically added section
# Automatically added by dh_systemd_enable
if [ "$1" = "remove" ]; then
	if [ -x "/usr/bin/deb-systemd-helper" ]; then
		deb-systemd-helper mask lsh-server.service >/dev/null
	fi
fi

if [ "$1" = "purge" ]; then
	if [ -x "/usr/bin/deb-systemd-helper" ]; then
		deb-systemd-helper purge lsh-server.service >/dev/null
		deb-systemd-helper unmask lsh-server.service >/dev/null
	fi
fi
# End automatically added section


exit 0
