Package: libaws3.3.2.2-dev
Source: libaws
Version: 17.2.2017-2
Architecture: amd64
Maintainer: Ludovic Brenta <lbrenta@debian.org>
Installed-Size: 18797
Depends: libgnutls28-dev, libldap2-dev, libz-dev, libxmlada-unicode7-dev, libxmlada-input7-dev, libxmlada-sax7-dev, libxmlada-dom7-dev, libxmlada-schema7-dev, libtemplates-parser11.10.2-dev, gnat, gnat-7, libaws17.2.2017 (= 17.2.2017-2)
Recommends: libaws-bin (= 17.2.2017-2)
Suggests: libaws-doc (= 17.2.2017-2), libjs-scriptaculous, libjs-prototype
Section: libdevel
Priority: optional
Homepage: https://libre.adacore.com/libre
Description: Ada Web Server development files
 AWS is a complete framework to develop Web based applications. The
 main part of the framework is the embedded Web server. This small yet
 powerful Web server can be embedded into your application so your
 application will be able to talk with a Web browser. Around this Web
 server a lot of services have been developed.
 .
  - A Web parameters module. This module takes care of retrieving the
    forms or URL parameters and to build an associative table for easy
    access.
  - A session server, this is a very important module to be able to
    keep client's data from page to page.
  - Support SOAP to develop Web Services.
  - A tool to generate Web Services stubs/skeletons from a WSDL
    document.
  - A template parser, this module makes it possible to completely
    separate the Web design from the code. No more scripting into your Web
    page.
  - Support for Secure Sockets (HTTPS/SSL), this is based on the GNU TLS
    library.
  - Support for large servers using dispatchers based on URI, request
    methods.
  - Support for virtual hosting (dispatchers based on the host name).
  - Support for server push.
  - A directory browser ready to be used in any application.
  - A status page to get many information about the current AWS server.
  - A log module. Log files keep information about all resources
    requested to the server.
  - Hotplug modules which can be loaded/unloaded dynamically to add
    specific features to a server.
  - A communication API to exchange data between applications using the
    HTTP protocol.
  - A configuration API to tune/change the server parameters without
    recompilation.
  - A client API to retrieve any Web page from a Web site.
  - A Web Page service to build a simple static page server.
  - Support for SMTP, LDAP and Jabber protocols.
