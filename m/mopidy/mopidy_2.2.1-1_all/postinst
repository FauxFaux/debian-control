#!/bin/sh
# postinst script for mopidy

set -e

. /usr/share/debconf/confmodule

# Automatically added by dh_systemd_enable/11.3.5
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if deb-systemd-helper debian-installed 'mopidy.service'; then
		# This will only remove masks created by d-s-h on package removal.
		deb-systemd-helper unmask 'mopidy.service' >/dev/null || true

		if deb-systemd-helper --quiet was-enabled 'mopidy.service'; then
			# Create new symlinks, if any.
			deb-systemd-helper enable 'mopidy.service' >/dev/null || true
		fi
	fi

	# Update the statefile to add new symlinks (if any), which need to be cleaned
	# up on purge. Also remove old symlinks.
	deb-systemd-helper update-state 'mopidy.service' >/dev/null || true
fi
# End automatically added section

# Automatically added by dh_python2:
if which pycompile >/dev/null 2>&1; then
	pycompile -p mopidy 
fi

# End automatically added section
# Automatically added by dh_installinit/11.3.5
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if [ -x "/etc/init.d/mopidy" ]; then
		update-rc.d mopidy defaults >/dev/null || exit 1
	fi
fi
# End automatically added section


case "$1" in
    configure|reconfigure)
        adduser --quiet --system --no-create-home --home /var/lib/mopidy --ingroup audio mopidy

        chown mopidy:audio /var/cache/mopidy
        chown mopidy:audio /var/lib/mopidy
        chown mopidy:audio /var/lib/mopidy/local
        chown mopidy:audio /var/lib/mopidy/media
        chown mopidy:audio /var/lib/mopidy/playlists
        chown mopidy:audio /var/log/mopidy

        # mopidy.conf may contain passwords and other confidential information
        if [ -e /etc/mopidy/mopidy.conf ]; then
            chown mopidy:root /etc/mopidy/mopidy.conf
            chmod 640 /etc/mopidy/mopidy.conf
        fi

        db_get mopidy/daemon
        if [ "$RET" = "true" ]; then
            update-rc.d mopidy enable >/dev/null
            invoke-rc.d mopidy start || exit $?
        else
            update-rc.d mopidy disable >/dev/null
            invoke-rc.d mopidy stop || exit $?
        fi
        ;;

    abort-upgrade|abort-remove|abort-deconfigure)
        ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
        ;;
esac

exit 0
