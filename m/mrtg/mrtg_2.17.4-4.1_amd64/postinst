#! /bin/sh
# postinst script for #PACKAGE#
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see /usr/share/doc/packaging-manual/
#
# quoting from the policy:
#     Any necessary prompting should almost always be confined to the
#     post-installation script, and should be protected with a conditional
#     so that unnecessary prompting doesn't happen if a package's
#     installation fails and the `postinst' is called with `abort-upgrade',
#     `abort-remove' or `abort-deconfigure'.


. /usr/share/debconf/confmodule

case "$1" in
	configure)

	# Remove crontab entry, because mrtg now uses /etc/cron.d/mrtg
	if grep -q "#-- mrtg begin" /etc/crontab; then
		cp /etc/crontab /etc/crontab.tmp$$
		sed -e '/#-- mrtg begin/,/#-- mrtg end/d' </etc/crontab.tmp$$ \
			>/etc/crontab
		rm /etc/crontab.tmp$$
	fi

        # logfiles shouldn't be world-readable, as they may contain sensitive data
        chgrp adm /var/log/mrtg
        chmod 750 /var/log/mrtg

	db_get mrtg/conf_mods
	if [ "$RET" = "true" ]; then
			_PERMS=640
		else
			_PERMS=644
	fi

	if [ -e /etc/mrtg.cfg ]; then
		chmod $_PERMS /etc/mrtg.cfg
	fi

	if [ -e /var/lib/mrtg/mrtg.ok ]; then
		chmod -f $_PERMS /var/lib/mrtg/mrtg.ok
	fi

 	;;

  	abort-upgrade|abort-remove|abort-deconfigure)

  	;;

	*)
		echo "postinst called with unknown argument \`$1'" >&2
		exit 0
	;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.



exit 0


