#! /bin/sh
# postinst script for munge
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#

case "$1" in
    configure)
      if [ $(id -u munge 2> /dev/null) ]; then
        MUNGEHOME=$(eval echo ~munge)
        if [ "$MUNGEHOME" != "/nonexistent" ] && [ ! -e $MUNGEHOME ] ; then
            usermod --home /nonexistent munge #|| true
        fi
      else
        adduser --quiet --system --group --no-create-home --home /nonexistent munge
      fi
      chown munge:munge /var/log/munge
      chmod 0700 /var/log/munge
      chown munge:munge /etc/munge
      chmod 0700 /etc/munge
      chown munge:munge /var/lib/munge
      chmod 0711 /var/lib/munge

      if [ -e /etc/munge/munge.key ] ; then
        chown munge:munge /etc/munge/munge.key
        chmod 0400 /etc/munge/munge.key
      else
        create-munge-key
        echo "Please refer to /usr/share/doc/munge/README.Debian"\
             "for instructions to generate more secure key."
      fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)

    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# Those using dependency based boot sequencing with sysv-rc and
# installing munge before version 0.5.8-9 would miss the
# runlevel 4 symlink and have wrong 2 symlink.
# Recover from this.
if [ "$1" = "configure" ] && dpkg --compare-versions "$2" le "0.5.8-10" \
   && [ -f /etc/rc2.d/K[0-9][0-9]munge ] ; then
      update-rc.d -f munge remove
fi



# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

# Automatically added by dh_systemd_enable/10.10.5
# This will only remove masks created by d-s-h on package removal.
deb-systemd-helper unmask 'munge.service' >/dev/null || true

# was-enabled defaults to true, so new installations run enable.
if deb-systemd-helper --quiet was-enabled 'munge.service'; then
	# Enables the unit on first installation, creates new
	# symlinks on upgrades if the unit file has changed.
	deb-systemd-helper enable 'munge.service' >/dev/null || true
else
	# Update the statefile to add new symlinks (if any), which need to be
	# cleaned up on purge. Also remove old symlinks.
	deb-systemd-helper update-state 'munge.service' >/dev/null || true
fi
# End automatically added section
# Automatically added by dh_installinit/10.10.5
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ]; then
	# In case this system is running systemd, we need to ensure that all
	# necessary tmpfiles (if any) are created before starting.
	if [ -d /run/systemd/system ] ; then
		systemd-tmpfiles --create /usr/lib/tmpfiles.d/munge.conf >/dev/null || true
	fi
fi
# End automatically added section
# Automatically added by dh_installinit/10.10.5
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ]; then
	if [ -x "/etc/init.d/munge" ]; then
		update-rc.d munge defaults >/dev/null
		if [ -n "$2" ]; then
			_dh_action=restart
		else
			_dh_action=start
		fi
		invoke-rc.d munge $_dh_action || exit $?
	fi
fi
# End automatically added section


exit 0


