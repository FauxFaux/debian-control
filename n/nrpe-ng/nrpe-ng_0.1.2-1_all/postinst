#!/bin/sh
set -e

case "$1" in
configure)
	# create nagios group if there isn't one already
	if ! getent group nagios >/dev/null; then
		addgroup --system nagios >/dev/null
	fi

	# create nagios user if there isn't one already
	if ! getent passwd nagios >/dev/null; then
		adduser --system --ingroup nagios --shell /usr/sbin/nologin \
			--home /var/lib/nagios nagios >/dev/null
	fi
	;;
esac

# Automatically added by dh_systemd_enable
# This will only remove masks created by d-s-h on package removal.
deb-systemd-helper unmask nrpe-ng.service >/dev/null || true

# was-enabled defaults to true, so new installations run enable.
if deb-systemd-helper --quiet was-enabled nrpe-ng.service; then
	# Enables the unit on first installation, creates new
	# symlinks on upgrades if the unit file has changed.
	deb-systemd-helper enable nrpe-ng.service >/dev/null || true
else
	# Update the statefile to add new symlinks (if any), which need to be
	# cleaned up on purge. Also remove old symlinks.
	deb-systemd-helper update-state nrpe-ng.service >/dev/null || true
fi
# End automatically added section

# Automatically added by dh_python3:
if which py3compile >/dev/null 2>&1; then
	py3compile -p nrpe-ng -V 3.4-
fi

# End automatically added section
# Automatically added by dh_installinit
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ]; then
	# In case this system is running systemd, we need to ensure that all
	# necessary tmpfiles (if any) are created before starting.
	if [ -d /run/systemd/system ] ; then
		systemd-tmpfiles --create /usr/lib/tmpfiles.d/nrpe-ng.conf >/dev/null || true
	fi
fi
# End automatically added section
# Automatically added by dh_installinit
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ]; then
	if [ -x "/etc/init.d/nrpe-ng" ]; then
		update-rc.d nrpe-ng defaults >/dev/null
		if [ -n "$2" ]; then
			_dh_action=restart
		else
			_dh_action=start
		fi
		invoke-rc.d nrpe-ng $_dh_action || exit $?
	fi
fi
# End automatically added section


