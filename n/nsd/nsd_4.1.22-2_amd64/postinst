#!/bin/sh
set -e

if test "$1" = "configure"; then
    # Move /etc/nsd3/nsd.conf to /etc/nsd/nsd.conf on first install of NSD 4
    OLDCONFFILE=/etc/nsd3/nsd.conf
    NEWCONFFILE=/etc/nsd/nsd.conf
    if [ -z "$2" ] && [ -f "$OLDCONFFILE" ]; then
	echo "Preserving user changes to $NEWCONFFILE (renamed from $OLDCONFFILE)..."
        mv -f "$NEWCONFFILE" "$NEWCONFFILE.dpkg-new"
        mv -f "$OLDCONFFILE" "$NEWCONFFILE"
    fi

    # Create nsd user and group
    if ! getent passwd nsd > /dev/null; then
        adduser --quiet --system --group --no-create-home --home /var/lib/nsd nsd
    fi

    # Make /var/lib/nsd writeable by nsd:nsd user
    if ! dpkg-statoverride --list /var/lib/nsd >/dev/null; then
        dpkg-statoverride --update --add nsd nsd 0755 /var/lib/nsd >/dev/null 2>/dev/null || true
    fi

    # Cleanup some cruft from prior NSD 4 packaging (it can go away before release)
    if [ -n "$2" ] && dpkg --compare-versions 4.0.0-1~ gt "$2"; then
	dpkg-statoverride --remove /etc/nsd/nsd.conf >/dev/null 2>/dev/null || true
	dpkg-statoverride --remove /etc/nsd >/dev/null 2>/dev/null || true
    fi

    # Remove the old statoverrides from nsd3 package
    for f in /var/lib/nsd3 /etc/nsd3/nsd.conf /etc/nsd3; do
	if dpkg-statoverride --list "$f" >/dev/null; then
	    dpkg-statoverride --remove "$f" >/dev/null 2>/dev/null || true
	fi
    done

    # Generate the control certificates if needed
    if ! [ -f /etc/nsd/nsd_control.key ]; then
	nsd-control-setup >/dev/null 2>&1 || true
    fi

    # This is a remedy for purging already removed nsd3 after nsd installation
    nsd3_postrm=$(dpkg-query --control-path nsd3 postrm 2>/dev/null || true)
    if [ -n "$nsd3_postrm" ] && [ -f "$nsd3_postrm" ] && grep -q deluser "$nsd3_postrm"; then
	sed -i -e "/deluser --quiet nsd/ d" "$nsd3_postrm"
    fi
fi

# Automatically added by dh_installsystemd/11.3.2
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	# In case this system is running systemd, we need to ensure that all
	# necessary tmpfiles (if any) are created before starting.
	if [ -d /run/systemd/system ] ; then
		systemd-tmpfiles --create nsd.conf >/dev/null || true
	fi
fi
# End automatically added section
# Automatically added by dh_installinit/11.3.2
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if [ -x "/etc/init.d/nsd" ]; then
		update-rc.d nsd defaults >/dev/null
		if [ -n "$2" ]; then
			_dh_action=restart
		else
			_dh_action=start
		fi
		invoke-rc.d nsd $_dh_action || exit 1
	fi
fi
# End automatically added section
# Automatically added by dh_installsystemd/11.3.2
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	# This will only remove masks created by d-s-h on package removal.
	deb-systemd-helper unmask 'nsd.service' >/dev/null || true

	# was-enabled defaults to true, so new installations run enable.
	if deb-systemd-helper --quiet was-enabled 'nsd.service'; then
		# Enables the unit on first installation, creates new
		# symlinks on upgrades if the unit file has changed.
		deb-systemd-helper enable 'nsd.service' >/dev/null || true
	else
		# Update the statefile to add new symlinks (if any), which need to be
		# cleaned up on purge. Also remove old symlinks.
		deb-systemd-helper update-state 'nsd.service' >/dev/null || true
	fi
fi
# End automatically added section


exit 0
