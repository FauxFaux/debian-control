#! /bin/sh
# postrm script for nufw
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <r>overwrit>r> <new-version>
# for details, see /usr/doc/packaging-manual/

all_config_files="nufw.conf"

tls_data_files="
nufw-cert.pem
nufw-key.pem
"

case "$1" in
       purge|disappear)
		  for FILE in $all_config_files; do
                    # Taken from the ucf example postrm
                    for ext in '~' '%' .bak .dpkg-tmp .dpkg-new .dpkg-old .dpkg-dist .ucf-dist;  do
                        rm -f /etc/nufw/$FILE$ext
                    done
                    rm -f /etc/nufw/$FILE
                    if which ucf >/dev/null 2>&1; then
                        ucf --purge /etc/nufw/$FILE
                    fi
                  done

                  # remove certs
                  for FILE in $tls_data_files; do
                    rm -f /etc/nufw/certs/$FILE
                  done
		;;
       remove|upgrade|failed-upgrade|abort-install|abort-upgrade)
		# nothing
        	;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

# Automatically added by dh_installinit
if [ "$1" = "purge" ] ; then
	update-rc.d nufw remove >/dev/null
fi


# In case this system is running systemd, we make systemd reload the unit files
# to pick up changes.
if [ -d /run/systemd/system ] ; then
	systemctl --system daemon-reload >/dev/null || true
fi
# End automatically added section




