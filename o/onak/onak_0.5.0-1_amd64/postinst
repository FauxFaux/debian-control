#! /bin/sh

set -e

if [ "$1" = "configure" ]; then
    if dpkg --compare-versions -- "$2" le "0.4.6-1"; then
        echo "Upgrading from old onak.conf version"
        if [ -e /etc/onak.conf.dpkg-backup -a ! -e /etc/onak.conf ]; then
                echo "Migrating onak.conf to onak.ini"
                # Old config file was modified; generate a new style
                # file. onak will use the file extension to determine it's
                # an old style config, so we need the symlink.
                ln -s /etc/onak.conf.dpkg-backup /etc/onak.conf
                onak -c /etc/onak.conf dumpconfig /etc/onak.ini
                rm /etc/onak.conf
        fi
    fi

    # Add the onak user
    adduser --system --home /var/lib/onak --no-create-home --disabled-login onak

    #
    # If we're using a default config and there's no onak database, create it
    # by adding my key.
    #
    if grep -q "^backend=defaultdb4" /etc/onak.ini &&
            grep -q "^location=/var/lib/onak" /etc/onak.ini &&
            [ ! -e /var/lib/onak/num_keydb -a \
                -e /usr/share/doc/onak/noodles.key.gz ]; then
        zcat /usr/share/doc/onak/noodles.key | onak -b add
    fi

    # Take ownership of the database and spool directory
    chown -R onak /var/lib/onak
    chown -R onak /var/spool/onak

    # Create our logfile
    touch /var/log/onak.log
    chown onak /var/log/onak.log

    # Make the CGI tools setuid onak
    for i in /usr/lib/cgi-bin/pks/*
    do
        if ! dpkg-statoverride --list $i >/dev/null
        then
            dpkg-statoverride --update --add onak root 4755 $i
        fi
    done
fi

# Automatically added by dh_systemd_enable
if deb-systemd-helper debian-installed onak.service; then
	# This will only remove masks created by d-s-h on package removal.
	deb-systemd-helper unmask onak.service >/dev/null || true

	if deb-systemd-helper --quiet was-enabled onak.service; then
		# Create new symlinks, if any.
		deb-systemd-helper enable onak.service >/dev/null || true
	fi
fi

# Update the statefile to add new symlinks (if any), which need to be cleaned
# up on purge. Also remove old symlinks.
deb-systemd-helper update-state onak.service >/dev/null || true
# End automatically added section
# Automatically added by dh_systemd_enable
if deb-systemd-helper debian-installed onak.socket; then
	# This will only remove masks created by d-s-h on package removal.
	deb-systemd-helper unmask onak.socket >/dev/null || true

	if deb-systemd-helper --quiet was-enabled onak.socket; then
		# Create new symlinks, if any.
		deb-systemd-helper enable onak.socket >/dev/null || true
	fi
fi

# Update the statefile to add new symlinks (if any), which need to be cleaned
# up on purge. Also remove old symlinks.
deb-systemd-helper update-state onak.socket >/dev/null || true
# End automatically added section
# Automatically added by dh_installinit
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ]; then
	if [ -x "/etc/init.d/onak" ]; then
		update-rc.d onak defaults >/dev/null || exit $?
	fi
fi
# End automatically added section
# Automatically added by dh_installdeb
dpkg-maintscript-helper rm_conffile /etc/onak.conf 0.4.6-1 onak -- "$@"
# End automatically added section


#
# With the move to systemd this will force systemd to start keyd even if it's
# disabled in the onak config file; the systemd service file can't check the
# way the init script does. Work around this by doing the check here and
# only calling invoke-rc.d if it's actually enabled.
#
if grep -q -E '^use_keyd=*(true|yes|1)$' /etc/onak.ini; then
    invoke-rc.d onak start || exit $?
fi
