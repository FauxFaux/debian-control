#!/bin/sh

set -e

. /usr/share/debconf/confmodule
db_version 2.0

# Configure the local cell for the file server.
db_get openafs-fileserver/thiscell
echo $RET >/etc/openafs/server/ThisCell

# If there is no local server CellServDB, construct it from the client
# CellServDB by looking for the local cell.  If that fails, create a minimal
# CellServDB for the server with no information.
if [ ! -f /etc/openafs/server/CellServDB ] ; then
    sed -n "/^>$RET/,/^>/p" /etc/openafs/CellServDB | sed '$d' \
        >/etc/openafs/server/CellServDB
    if [ ! -s /etc/openafs/server/CellServDB ] ; then
        echo ">$RET" >/etc/openafs/server/CellServDB
    fi
fi

# Automatically added by dh_systemd_enable/10.10.9
# This will only remove masks created by d-s-h on package removal.
deb-systemd-helper unmask 'openafs-fileserver.service' >/dev/null || true

# was-enabled defaults to true, so new installations run enable.
if deb-systemd-helper --quiet was-enabled 'openafs-fileserver.service'; then
	# Enables the unit on first installation, creates new
	# symlinks on upgrades if the unit file has changed.
	deb-systemd-helper enable 'openafs-fileserver.service' >/dev/null || true
else
	# Update the statefile to add new symlinks (if any), which need to be
	# cleaned up on purge. Also remove old symlinks.
	deb-systemd-helper update-state 'openafs-fileserver.service' >/dev/null || true
fi
# End automatically added section
# Automatically added by dh_installinit/10.10.9
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ]; then
	if [ -x "/etc/init.d/openafs-fileserver" ]; then
		update-rc.d openafs-fileserver defaults >/dev/null
		invoke-rc.d openafs-fileserver start || exit $?
	fi
fi
# End automatically added section


exit 0
