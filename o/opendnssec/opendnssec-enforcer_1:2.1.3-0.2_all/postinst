#!/bin/sh

set -e

# Replace documentation directory with symlink
docdir="/usr/share/doc/opendnssec-enforcer"
if [ -d $docdir ] && [ ! -L $docdir ]; then
    if rmdir $docdir 2>/dev/null; then
        ln -sf opendnssec-common $docdir
    fi
fi

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

# Automatically added by dh_systemd_enable/10.9
# This will only remove masks created by d-s-h on package removal.
deb-systemd-helper unmask opendnssec-enforcer.service >/dev/null || true

# was-enabled defaults to true, so new installations run enable.
if deb-systemd-helper --quiet was-enabled opendnssec-enforcer.service; then
	# Enables the unit on first installation, creates new
	# symlinks on upgrades if the unit file has changed.
	deb-systemd-helper enable opendnssec-enforcer.service >/dev/null || true
else
	# Update the statefile to add new symlinks (if any), which need to be
	# cleaned up on purge. Also remove old symlinks.
	deb-systemd-helper update-state opendnssec-enforcer.service >/dev/null || true
fi
# End automatically added section
# Automatically added by dh_installinit/10.9
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ]; then
	# In case this system is running systemd, we need to ensure that all
	# necessary tmpfiles (if any) are created before starting.
	if [ -d /run/systemd/system ] ; then
		systemd-tmpfiles --create /usr/lib/tmpfiles.d/opendnssec-enforcer.conf >/dev/null || true
	fi
fi
# End automatically added section
# Automatically added by dh_installinit/10.9
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ]; then
	if [ -x "/etc/init.d/opendnssec-enforcer" ]; then
		update-rc.d opendnssec-enforcer defaults >/dev/null
		invoke-rc.d opendnssec-enforcer start || exit $?
	fi
fi
# End automatically added section


exit 0
