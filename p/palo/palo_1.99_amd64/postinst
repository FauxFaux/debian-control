#! /bin/sh
# postinst script for palo
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see /usr/share/doc/packaging-manual/
#
# quoting from the policy:
#     Any necessary prompting should almost always be confined to the
#     post-installation script, and should be protected with a conditional
#     so that unnecessary prompting doesn't happen if a package's
#     installation fails and the `postinst' is called with `abort-upgrade',
#     `abort-remove' or `abort-deconfigure'.

GREP()
{
    grep "$@" /etc/palo.conf > /dev/null
}

case "$1" in
    configure)
	if [ -f /etc/palo.conf ] # this test is redundant
	then
	    # is there a --bootloader or -b line referring to iplboot?
	    if GREP -e '^[ 	]*--bootloader' -e '^[ 	]*-b'
	    then
		if GREP -e '^/boot/iplboot' -e '=/boot/iplboot'
		then
		    # OK, need to change the file
		    cp /etc/palo.conf /etc/palo.conf.pre-0.94
		    comment="# obsolete with palo-0.94 # "
		    sed -e "s:^[ 	]*-b:$comment&:" \
			-e "s:^[ 	]*--bootloader:$comment&:" \
			< /etc/palo.conf.pre-0.94 > /etc/palo.conf
		fi
	    fi
	fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
	# shouldn't be anything to do here
	true
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 0
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.



exit 0
