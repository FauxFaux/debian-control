#!/bin/sh -e

DEB_HOST_MULTIARCH=x86_64-linux-gnu

PETSC_VERSION=3.7.5
PETSC_ARCH=${DEB_HOST_MULTIARCH}
PETSC_DEBUG_ARCH=${PETSC_ARCH}-real-debug
PETSC_VERSION_NUMBER=$( echo ${PETSC_VERSION} | sed "s/\.//g" )


# Make alternatives links
if [ "$1" = "configure" ]; then

# alternative libpetsc.so.multiarch is deprecated
# test if libpetsc.so.multiarch is still in use, so remove old petsc alternatives
# This should be safe since Conflicts are set up with the dev package versions using deprecated libpetsc.so.multiarch.
if update-alternatives --query petsc | grep libpetsc.so.multiarch > /dev/null ; then
  echo Removing deprecated petsc alternatives using libpetsc.so.multiarch.
  for alt in `update-alternatives --list petsc`; do
    update-alternatives --remove petsc ${alt}
  done
fi

update-alternatives --install /usr/lib/petsc petsc /usr/lib/petscdir/${PETSC_VERSION}/${PETSC_DEBUG_ARCH} ${PETSC_VERSION_NUMBER}37 \
  --slave /usr/lib/${DEB_HOST_MULTIARCH}/libpetsc.so libpetsc.so /usr/lib/petscdir/${PETSC_VERSION}/${PETSC_DEBUG_ARCH}/lib/libpetsc_real.so.${PETSC_VERSION} \
  --slave /usr/include/petsc petscinclude /usr/lib/petscdir/${PETSC_VERSION}/${PETSC_DEBUG_ARCH}/include \
  --slave /usr/lib/${DEB_HOST_MULTIARCH}/pkgconfig/PETSc.pc PETSc.pc /usr/lib/petscdir/${PETSC_VERSION}/${PETSC_DEBUG_ARCH}/lib/pkgconfig/PETSc.pc \
  --slave /usr/share/octave/site/m/petsc petsc-octave /usr/lib/petscdir/${PETSC_VERSION}/${PETSC_DEBUG_ARCH}/share/petsc/matlab

fi



# Automatically added by dh_python2:
if which pycompile >/dev/null 2>&1; then
	pycompile -p libpetsc3.7.5-dbg /usr/lib/petscdir/3.7.5/x86_64-linux-gnu-real-debug/bin
fi

# End automatically added section

