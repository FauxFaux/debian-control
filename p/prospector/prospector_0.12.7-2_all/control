Package: prospector
Version: 0.12.7-2
Architecture: all
Maintainer: Python Applications Packaging Team <python-apps-team@lists.alioth.debian.org>
Installed-Size: 439
Depends: dodgy (>= 0.1.9), pydocstyle (>= 2.0.0), pylint3 (>= 1.5.6), python3-mccabe (>= 0.5.0), python3-pep8-naming, python3-pycodestyle, python3-pyflakes (>= 0.8.1), python3-pylint-celery, python3-pylint-common (>= 0.2.5), python3-pylint-django (>= 0.7.2), python3-pylint-flask, python3-pylint-plugin-utils (>= 0.2.6), python3-requirements-detector (>= 0.4.1), python3-setoptconf, python3-yaml, python3.6:any, python3:any (>= 3.3.2-2~), libjs-sphinxdoc (>= 1.0)
Recommends: python3-pyroma (>= 2.0.2), vulture (>= 0.8.1-2)
Section: devel
Priority: optional
Homepage: http://prospector.readthedocs.org/en/master/
Description: comprehensive static Python code analyzer
 Prospector analyzes Python source files and puts out information about
 coding errors, potential problems, convention violation and unnecessary
 complexity.
 .
 It provides an uniform and flexible interface for these tools:
  - Pylint (extensive Python code checker)
  - Pyflakes (checks Python code for logical errors)
  - Pycodestyle (checks for PEP-8 coding style conventions)
  - Pep8-naming (checks for PEP-8 naming conventions not covered by pycodestyle)
  - McCabe (checks for cyclomatic code complexity)
  - Pydocstyle (checks for compliance with the PEP-257 docstring conventions)
  - Dodgy (checks for hard coded passwords, VCS diff checkins etc.)
  - Vulture (scans Python programs for unused code)
  - Pyroma (Python packaging quality checker)
 .
 Prospector detects if code employs specific frameworks and libraries,
 and checks them by corresponding Pylint plugins:
  - Django (web application framework)
  - Celery (asynchronous task/job queue)
  - Flask (web application framework)
