Package: python-pycuda-doc
Source: pycuda
Version: 2017.1.1-2
Architecture: all
Maintainer: Tomasz Rybak <serpent@debian.org>
Installed-Size: 1005
Depends: libjs-sphinxdoc (>= 1.0), libjs-mathjax, fonts-mathjax
Recommends: nvidia-cuda-doc, python3-doc, python-numpy-doc, python-mako-doc
Suggests: python-pycuda, python3-pycuda
Section: contrib/doc
Priority: optional
Multi-Arch: foreign
Homepage: http://mathema.tician.de/software/pycuda
Description: module to access Nvidia‘s CUDA computation API (documentation)
 PyCUDA lets you access Nvidia‘s CUDA parallel computation API from Python.
 Several wrappers of the CUDA API already exist–so what’s so special about
 PyCUDA?
  * Object cleanup tied to lifetime of objects. This idiom, often called
    RAII in C++, makes it much easier to write correct, leak- and crash-free
    code.  PyCUDA knows about dependencies, too, so (for example) it won’t
    detach from a context before all memory allocated in it is also freed.
  * Convenience. Abstractions like pycuda.driver.SourceModule and
    pycuda.gpuarray.GPUArray make CUDA programming even more convenient than
    with Nvidia’s C-based runtime.
  * Completeness. PyCUDA puts the full power of CUDA’s driver API at your
    disposal, if you wish.
  * Automatic Error Checking. All CUDA errors are automatically translated
    into Python exceptions.
  * Speed. PyCUDA’s base layer is written in C++, so all the niceties
    above are virtually free.
  * Helpful Documentation.
 .
 This package contains HTML documentation and example scripts.
