Package: racon
Version: 1.3.1-1
Architecture: amd64
Maintainer: Debian Med Packaging Team <debian-med-packaging@lists.alioth.debian.org>
Installed-Size: 157
Depends: libc6 (>= 2.14), libedlib0 (>= 1.2.3), libgcc1 (>= 1:3.0), libspoa1.1.3 (>= 1.1.3), libstdc++6 (>= 7), libthread-pool0 (>= 1.0.0), zlib1g (>= 1:1.2.11.dfsg)
Section: science
Priority: optional
Homepage: https://github.com/isovic/racon
Description: consensus module for raw de novo DNA assembly of long uncorrected reads
 Racon is intended as a standalone consensus module to correct raw
 contigs generated by rapid assembly methods which do not include a
 consensus step. The goal of Racon is to generate genomic consensus which
 is of similar or better quality compared to the output generated by
 assembly methods which employ both error correction and consensus steps,
 while providing a speedup of several times compared to those methods. It
 supports data produced by both Pacific Biosciences and Oxford Nanopore
 Technologies.
 .
 Racon can be used as a polishing tool after the assembly with either
 Illumina data or data produced by third generation of sequencing. The
 type of data inputed is automatically detected.
 .
 Racon takes as input only three files: contigs in FASTA/FASTQ format,
 reads in FASTA/FASTQ format and overlaps/alignments between the reads
 and the contigs in MHAP/PAF/SAM format. Output is a set of polished
 contigs in FASTA format printed to stdout. All input files can be
 compressed with gzip.
 .
 Racon can also be used as a read error-correction tool. In this
 scenario, the MHAP/PAF/SAM file needs to contain pairwise overlaps
 between reads including dual overlaps.
 .
 A wrapper script is also available to enable easier usage to the end-
 user for large datasets. It has the same interface as racon but adds
 two additional features from the outside. Sequences can be subsampled
 to decrease the total execution time (accuracy might be lower) while
 target sequences can be split into smaller chunks and run sequentially
 to decrease memory consumption. Both features can be run at the same
 time as well.
