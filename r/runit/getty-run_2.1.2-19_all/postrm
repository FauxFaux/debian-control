#!/bin/sh
set -e
# Automatically added by dh_runit/UNDECLARED
# -*- shell-script -*-
export NAME='getty-tty6'
export ENABLE='yes'

# Unfortunately, we can not assume, that bin:runit-helper package
# is installed at postrm stage.
#
# The only other option is embed whole runit-helper script here,
# into postrm script of -run package, but it would be like static
# linking, requiring rebuild of all reverse dependencies on every
# change of dh-runit.
if [ -x /lib/runit-helper/runit-helper ] ; then
    /lib/runit-helper/runit-helper postrm "$@"
fi

# Local Variables:
# eval: (sh-set-shell "sh" t nil)
# End:
# vim: ft=sh:sw=4
# End automatically added section
# Automatically added by dh_runit/UNDECLARED
# -*- shell-script -*-
export NAME='getty-tty5'
export ENABLE='yes'

# Unfortunately, we can not assume, that bin:runit-helper package
# is installed at postrm stage.
#
# The only other option is embed whole runit-helper script here,
# into postrm script of -run package, but it would be like static
# linking, requiring rebuild of all reverse dependencies on every
# change of dh-runit.
if [ -x /lib/runit-helper/runit-helper ] ; then
    /lib/runit-helper/runit-helper postrm "$@"
fi

# Local Variables:
# eval: (sh-set-shell "sh" t nil)
# End:
# vim: ft=sh:sw=4
# End automatically added section
# Automatically added by dh_runit/UNDECLARED
# -*- shell-script -*-
export NAME='getty-tty4'
export ENABLE='yes'

# Unfortunately, we can not assume, that bin:runit-helper package
# is installed at postrm stage.
#
# The only other option is embed whole runit-helper script here,
# into postrm script of -run package, but it would be like static
# linking, requiring rebuild of all reverse dependencies on every
# change of dh-runit.
if [ -x /lib/runit-helper/runit-helper ] ; then
    /lib/runit-helper/runit-helper postrm "$@"
fi

# Local Variables:
# eval: (sh-set-shell "sh" t nil)
# End:
# vim: ft=sh:sw=4
# End automatically added section
# Automatically added by dh_runit/UNDECLARED
# -*- shell-script -*-
export NAME='getty-tty3'
export ENABLE='yes'

# Unfortunately, we can not assume, that bin:runit-helper package
# is installed at postrm stage.
#
# The only other option is embed whole runit-helper script here,
# into postrm script of -run package, but it would be like static
# linking, requiring rebuild of all reverse dependencies on every
# change of dh-runit.
if [ -x /lib/runit-helper/runit-helper ] ; then
    /lib/runit-helper/runit-helper postrm "$@"
fi

# Local Variables:
# eval: (sh-set-shell "sh" t nil)
# End:
# vim: ft=sh:sw=4
# End automatically added section
# Automatically added by dh_runit/UNDECLARED
# -*- shell-script -*-
export NAME='getty-tty2'
export ENABLE='yes'

# Unfortunately, we can not assume, that bin:runit-helper package
# is installed at postrm stage.
#
# The only other option is embed whole runit-helper script here,
# into postrm script of -run package, but it would be like static
# linking, requiring rebuild of all reverse dependencies on every
# change of dh-runit.
if [ -x /lib/runit-helper/runit-helper ] ; then
    /lib/runit-helper/runit-helper postrm "$@"
fi

# Local Variables:
# eval: (sh-set-shell "sh" t nil)
# End:
# vim: ft=sh:sw=4
# End automatically added section
# Automatically added by dh_runit/UNDECLARED
# -*- shell-script -*-
export NAME='getty-tty1'
export ENABLE='yes'

# Unfortunately, we can not assume, that bin:runit-helper package
# is installed at postrm stage.
#
# The only other option is embed whole runit-helper script here,
# into postrm script of -run package, but it would be like static
# linking, requiring rebuild of all reverse dependencies on every
# change of dh-runit.
if [ -x /lib/runit-helper/runit-helper ] ; then
    /lib/runit-helper/runit-helper postrm "$@"
fi

# Local Variables:
# eval: (sh-set-shell "sh" t nil)
# End:
# vim: ft=sh:sw=4
# End automatically added section
