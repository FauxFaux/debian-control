#!/bin/sh
# postinst script for ctdb
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package


enable_legacy() { # From ctdb/packaging/RPM/ctdb.spec.in
    # If mandatory 00.ctdb event script is not enabled then enable it and
    # some other scripts.  The assumption here is that this is a
    # first-time install or an upgrade to a version that requires event
    # scripts to be enabled via symlinks.
    required_script="00.ctdb"
    required_path="/etc/ctdb/events/legacy/${required_script}.script"
    if [ ! -L "$required_path" ] && [ ! -e "$required_path" ] ; then
        default_scripts="${required_script}
                 01.reclock
                 05.system
                 10.interface
                 "
        for t in $default_scripts ; do
            tgt="/usr/share/ctdb/events/legacy/${t}.script"
            name="/etc/ctdb/events/legacy/${t}.script"
            # Directory is created via install and files
            ln -s "$tgt" "$name"
        done
    fi
}

case "$1" in
    configure)
        enable_legacy
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

# Automatically added by dh_installdeb/11.5.4
dpkg-maintscript-helper mv_conffile /etc/default/ctdb /etc/ctdb/ctdbd.conf 2:4.5.0\+dfsg-1\~ -- "$@"
# End automatically added section
# Automatically added by dh_installinit/11.5.4
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if [ -x "/etc/init.d/ctdb" ]; then
		update-rc.d ctdb defaults >/dev/null || exit 1
	fi
fi
# End automatically added section
# Automatically added by dh_installsystemd/11.5.4
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	# This will only remove masks created by d-s-h on package removal.
	deb-systemd-helper unmask 'ctdb.service' >/dev/null || true

	# was-enabled defaults to true, so new installations run enable.
	if deb-systemd-helper --quiet was-enabled 'ctdb.service'; then
		# Enables the unit on first installation, creates new
		# symlinks on upgrades if the unit file has changed.
		deb-systemd-helper enable 'ctdb.service' >/dev/null || true
	else
		# Update the statefile to add new symlinks (if any), which need to be
		# cleaned up on purge. Also remove old symlinks.
		deb-systemd-helper update-state 'ctdb.service' >/dev/null || true
	fi
fi
# End automatically added section


exit 0
