#!/bin/sh

set -e

# Automatically added by dh_installinit/10.9
if [ "$1" = "purge" ] ; then
	update-rc.d sidedoor remove >/dev/null
fi


# In case this system is running systemd, we make systemd reload the unit files
# to pick up changes.
if [ -d /run/systemd/system ] ; then
	systemctl --system daemon-reload >/dev/null || true
fi
# End automatically added section
# Automatically added by dh_systemd_enable/10.9
if [ "$1" = "remove" ]; then
	if [ -x "/usr/bin/deb-systemd-helper" ]; then
		deb-systemd-helper mask sidedoor.service >/dev/null
	fi
fi

if [ "$1" = "purge" ]; then
	if [ -x "/usr/bin/deb-systemd-helper" ]; then
		deb-systemd-helper purge sidedoor.service >/dev/null
		deb-systemd-helper unmask sidedoor.service >/dev/null
	fi
fi
# End automatically added section


if [ "$1" = purge ]; then
  # Change ownership of id_rsa to avoid exposing its contents to
  # a new group that reuses the old sidedoor gid.
  if [ -e /etc/sidedoor/id_rsa ]; then
    chown root:root /etc/sidedoor/id_rsa
  fi

  deluser --quiet --system sidedoor || true

  # Delete empty config files that were created in postinst.
  find /etc/sidedoor -empty -delete || true
  find /var/lib/sidedoor -empty -delete || true

elif [ "$1" = upgrade ] && dpkg --compare-versions "$2" lt 0.2~; then
  # sidedoor 0.1.1-1 had authorized_keys in /etc/sidedoor instead of
  # ~sidedoor/.ssh. Move it near the old location to prevent deletion
  # when downgrading.
  authorized_keys=/var/lib/sidedoor/.ssh/authorized_keys.dpkg-tmp
  moved_authorized_keys=/etc/sidedoor/authorized_keys.old
  if [ -s "$authorized_keys" -a ! -L "$authorized_keys" ]; then
    echo "WARNING: moving authorized_keys to prevent deletion during downgrade!"
    echo "Please remove the '.old' extension from $moved_authorized_keys."
    mkdir -p "$(dirname $moved_authorized_keys)"
    mv "$authorized_keys" "$moved_authorized_keys"
  fi
fi
