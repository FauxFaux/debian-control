#!/bin/sh

set -e

# checking debian-sks account

uid=`getent passwd debian-sks | cut -d ":" -f 3`
home=`getent passwd debian-sks | cut -d ":" -f 6`

# if there is the uid the account is there and we can do
# the sanit(ar)y checks otherwise we can safely create it.

if [ "$uid" ]; then
    # guess??? the checks!!!
    if [ $uid -ge 100 ] && [ $uid -le 999 ]; then
    	echo "debian-sks uid check: ok"
    else
    	echo "ERROR: debian-sks account has a non-system uid!"
	echo "Please check /usr/share/doc/sks/README.Debian on how to"
	echo "correct this problem"
	exit 1
    fi
    if [ "$home" = "/var/lib/sks" ]; then
        echo "debian-sks homedir check: ok"
    else
	echo "ERROR: debian-sks account has an invalid home directory!"
	echo "Please check /usr/share/doc/sks/README.Debian on how to"
	echo "correct this problem"
	exit 1
    fi
else
    # what this might mean?? oh creating a system l^Huser!
    adduser --quiet \
            --system \
            --disabled-password \
            --home /var/lib/sks \
	    --no-create-home \
	    --shell /bin/bash \
	    --group \
    debian-sks
fi

if [ "$1" = "configure" ]; then
    if [ "$2" = "" ]; then # This is a new install
        # ensure the top-level directories that sks needs write access
        # to are properly owned by debian-sks
        for i in lib log spool; do
	    chown debian-sks:debian-sks /var/$i/sks
	    chmod 0700 /var/$i/sks
        done
        chgrp adm /var/log/sks
        chmod g+rX /var/log/sks
        chmod g+s /var/log/sks
        
        # Note the active Berkeley DB version
        su debian-sks -c "cp -f /usr/lib/sks/berkeley_db.txt /var/lib/sks/berkeley_db.active"
    else
        mkdir -m 0700 -p /var/backups/sks
        chown debian-sks:debian-sks /var/backups/sks
        chmod 0700 /var/backups/sks

        su debian-sks -c /usr/share/sks/sks-db-upgrade
    fi
fi

# Automatically added by dh_installinit
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ]; then
	if [ -x "/etc/init.d/sks" ]; then
		update-rc.d sks defaults >/dev/null
		invoke-rc.d sks start || exit $?
	fi
fi
# End automatically added section


exit 0
