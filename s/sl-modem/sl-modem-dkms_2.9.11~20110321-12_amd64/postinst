#!/bin/sh
set -e

# Automatically added by dh_dkms
# The original file can be found in template-dkms-mkdeb/debian/postinst
# in the DKMS tarball, check it for copyright notices.

DKMS_NAME=sl-modem
DKMS_PACKAGE_NAME=$DKMS_NAME-dkms
DKMS_VERSION=2.9.11~20110321

postinst_found=0

case "$1" in
	configure)
		for DKMS_POSTINST in /usr/lib/dkms/common.postinst /usr/share/$DKMS_PACKAGE_NAME/postinst; do
			if [ -f $DKMS_POSTINST ]; then
				$DKMS_POSTINST $DKMS_NAME $DKMS_VERSION /usr/share/$DKMS_PACKAGE_NAME "" $2
				postinst_found=1
				break
			fi
		done
		if [ "$postinst_found" -eq 0 ]; then
			echo "ERROR: DKMS version is too old and $DKMS_PACKAGE_NAME was not"
			echo "built with legacy DKMS support."
			echo "You must either rebuild $DKMS_PACKAGE_NAME with legacy postinst"
			echo "support or upgrade DKMS to a more current version."
			exit 1
		fi
	;;
esac
# End automatically added section


daemon_stop () {
   if [ -e /var/run/slmodemd.pid ] ; then
      invoke-rc.d sl-modem-daemon stop || true
      sleep 1
   fi
}

case "$1" in
  configure)
    if [ -x /usr/lib/dkms/common.postinst ]; then
      # Check if slmodemd is running:
      if [ -e /var/run/slmodemd.pid ] ; then
        SLMODEMD_RUNNING=1
      fi
      # If either slamr or slusb module is actually in use, stop slmodemd, and 
      # remove the respective module:
      for module in slamr slusb ; do
        if grep -q "$module" /proc/modules 2>/dev/null ; then
          daemon_stop
          rmmod $module || true
        fi
      done
      modprobe slamr 2>/dev/null || modprobe slusb 2>/dev/null || true

      # If slmodemd was running and we are upgrading, then restart slmodemd:
      if [ -n "$SLMODEMD_RUNNING" -a -n "$2" ]; then
        invoke-rc.d sl-modem-daemon restart || true
      fi

    fi
  ;;
esac


