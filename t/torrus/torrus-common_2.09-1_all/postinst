#!/bin/sh
set -e

configure_user_group() {
#   Create the user/group. It only returns non-zero if there is some real
#   error, so in that case it's better to bail out anyway.
    adduser --quiet --system --no-create-home --home /nonexistent \
            --force-badname --group Debian-torrus > /dev/null 2>&1
}

fix_owner_perm() {
    chown -R Debian-torrus:Debian-torrus /var/lib/torrus /var/cache/torrus \
	                                 /var/log/torrus
    chmod g+s /var/lib/torrus/db
    chmod g+w /var/lib/torrus/db /var/cache/torrus /var/log/torrus
    chmod g+w /var/lib/torrus/session_data/lock /var/lib/torrus/session_data/store
    addgroup www-data Debian-torrus > /dev/null 2>&1
}

dpkg-maintscript-helper rm_conffile /etc/logrotate.d/torrus-common 2.01-3 -- "$@"

# Remove torrus-apache2.conf symlink that used to be installed in
# the now dropped package torrus-apache2 ... it has mod_perl configuration
# statements that break apache2 restarts until the configuration has been
# purged (if libapache2-mod-perl has been autoremoved in the meantime)
test -L /etc/apache2/conf.d/torrus-apache2.conf && rm /etc/apache2/conf.d/torrus-apache2.conf

case "$1" in
    configure)	
	configure_user_group
	fix_owner_perm
	su Debian-torrus -s /bin/sh -c "/usr/bin/db_recover -h /var/lib/torrus/db"
	torrus clearcache
	;;
    abort-upgrade|abort-remove|abort-deconfigure)
	;;
    *)
	echo "${0} called with unknown argument ${1}"
	exit 1
	;;
esac

# Automatically added by dh_installinit
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ]; then
	if [ -x "/etc/init.d/torrus-common" ]; then
		update-rc.d torrus-common defaults >/dev/null
		invoke-rc.d torrus-common start || exit $?
	fi
fi
# End automatically added section


exit 0
