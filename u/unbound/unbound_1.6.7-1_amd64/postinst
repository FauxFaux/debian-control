#!/bin/sh -e

action="$1"
oldversion="$2"

if [ "$action" = configure ]; then
    if ! getent passwd unbound >/dev/null; then
        adduser --quiet --system --group --no-create-home --home /var/lib/unbound unbound
    fi
    chown unbound:unbound /var/lib/unbound

    if [ ! -f /etc/unbound/unbound_control.key ]; then
        unbound-control-setup 1>/dev/null 2>&1 || true
    fi

    # Clean up permissions on the resolvconf forwarder hook on upgrades (#816425)
    if dpkg --compare-versions "$oldversion" lt-nl 1.5.8-1~; then
        if [ -f /etc/resolvconf/update.d/unbound ]; then
            chmod -x /etc/resolvconf/update.d/unbound
        fi
    fi
fi

# Automatically added by dh_systemd_enable/10.9.2
# This will only remove masks created by d-s-h on package removal.
deb-systemd-helper unmask 'unbound.service' >/dev/null || true

# was-enabled defaults to true, so new installations run enable.
if deb-systemd-helper --quiet was-enabled 'unbound.service'; then
	# Enables the unit on first installation, creates new
	# symlinks on upgrades if the unit file has changed.
	deb-systemd-helper enable 'unbound.service' >/dev/null || true
else
	# Update the statefile to add new symlinks (if any), which need to be
	# cleaned up on purge. Also remove old symlinks.
	deb-systemd-helper update-state 'unbound.service' >/dev/null || true
fi
# End automatically added section
# Automatically added by dh_systemd_enable/10.9.2
# This will only remove masks created by d-s-h on package removal.
deb-systemd-helper unmask 'unbound-resolvconf.service' >/dev/null || true

# was-enabled defaults to true, so new installations run enable.
if deb-systemd-helper --quiet was-enabled 'unbound-resolvconf.service'; then
	# Enables the unit on first installation, creates new
	# symlinks on upgrades if the unit file has changed.
	deb-systemd-helper enable 'unbound-resolvconf.service' >/dev/null || true
else
	# Update the statefile to add new symlinks (if any), which need to be
	# cleaned up on purge. Also remove old symlinks.
	deb-systemd-helper update-state 'unbound-resolvconf.service' >/dev/null || true
fi
# End automatically added section
# Automatically added by dh_systemd_enable/10.9.2
# This will only remove masks created by d-s-h on package removal.
deb-systemd-helper unmask 'unbound.service' >/dev/null || true

# was-enabled defaults to true, so new installations run enable.
if deb-systemd-helper --quiet was-enabled 'unbound.service'; then
	# Enables the unit on first installation, creates new
	# symlinks on upgrades if the unit file has changed.
	deb-systemd-helper enable 'unbound.service' >/dev/null || true
else
	# Update the statefile to add new symlinks (if any), which need to be
	# cleaned up on purge. Also remove old symlinks.
	deb-systemd-helper update-state 'unbound.service' >/dev/null || true
fi
# End automatically added section
# Automatically added by dh_systemd_start/10.9.2
if [ -d /run/systemd/system ]; then
	systemctl --system daemon-reload >/dev/null || true
	deb-systemd-invoke start 'unbound.service' >/dev/null || true
fi
# End automatically added section
# Automatically added by dh_installinit/10.9.2
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ]; then
	if [ -x "/etc/init.d/unbound" ]; then
		update-rc.d unbound defaults >/dev/null
		if [ -n "$2" ]; then
			_dh_action=restart
		else
			_dh_action=start
		fi
		invoke-rc.d unbound $_dh_action || true
	fi
fi
# End automatically added section
# Automatically added by dh_apparmor/2.11.0-11
aa_is_enabled() {
   if command aa-enabled >/dev/null 2>&1; then
      # apparmor >= 2.10.95-2
      aa-enabled --quiet 2>/dev/null
   else
      # apparmor << 2.10.95-2
      # (This should be removed once Debian Stretch and Ubuntu 18.04 are out.)
      rc=0
      aa-status --enabled 2>/dev/null || rc=$?
      [ "$rc" = 0 ] || [ "$rc" = 2 ]
   fi
}

if [ "$1" = "configure" ]; then
    APP_PROFILE="/etc/apparmor.d/usr.sbin.unbound"
    if [ -f "$APP_PROFILE" ]; then
        # Add the local/ include
        LOCAL_APP_PROFILE="/etc/apparmor.d/local/usr.sbin.unbound"

        test -e "$LOCAL_APP_PROFILE" || {
            tmp=`mktemp`
        cat <<EOM > "$tmp"
# Site-specific additions and overrides for usr.sbin.unbound.
# For more details, please see /etc/apparmor.d/local/README.
EOM
            mkdir `dirname "$LOCAL_APP_PROFILE"` 2>/dev/null || true
            mv -f "$tmp" "$LOCAL_APP_PROFILE"
            chmod 644 "$LOCAL_APP_PROFILE"
        }

        # Reload the profile, including any abstraction updates
        if aa_is_enabled; then
            apparmor_parser -r -T -W "$APP_PROFILE" || true
        fi
    fi
fi
# End automatically added section
# Automatically added by dh_installdeb/10.9.2
dpkg-maintscript-helper rm_conffile /etc/default/unbound 1.5.7-2~ -- "$@"
# End automatically added section

