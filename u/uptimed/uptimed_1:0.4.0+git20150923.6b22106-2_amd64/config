#! /usr/bin/perl -w

use strict;

use Debconf::Client::ConfModule ':all';

version('2.0');
my $capb = capb('backup');

my $sendmails = 0;
my $havemilestones = 0;

# Step 1: Put the current settings into the DebConf database
#         Invalid values are ignored

if (open(CONFIG, '/etc/uptimed.conf')) {
	while(<CONFIG>) {
		chomp;
		(/^UPDATE_INTERVAL=[0-9]*/) && do {
			s/^UPDATE_INTERVAL=//;
			set('uptimed/interval', $_); };
		(/^LOG_MAXIMUM_ENTRIES=[0-9]*/) && do {
			s/^LOG_MAXIMUM_ENTRIES=//;
			set('uptimed/maxrecords', $_); };
		(/^EMAIL=[a-zA-Z0-9.-]+@[a-zA-Z0-9.%-]+/) && do {
			s/^EMAIL=//;
			set('uptimed/mail/address', $_); };
		(/^SEND_EMAIL=/) && do {
			s/^SEND_EMAIL=//;
			if($_ > 0) {
				$sendmails = $_;
			} else {
				$sendmails = 0;
			} };
	};
	if ($sendmails == 1) {
		set('uptimed/mail/do_mail', 'Both');
	} else {if ($sendmails == 2) {
		set('uptimed/mail/do_mail', 'Milestone');
	} else {if ($sendmails == 3) {
		set('uptimed/mail/do_mail', 'Record');
	} else {
		set('uptimed/mail/do_mail', 'Never');
	}; }; };
};

# Step 2: Ask the user whether he wants to change something

my $state = 1;


while(($state > 0) && ($state <= 5)) {
	if ($state == 1) {
		input('medium', 'uptimed/maxrecords');
	};
	($state == 2) && input('medium', 'uptimed/mail/do_mail');
	($state == 3) && (get('uptimed/mail/do_mail') ne 'Never') &&
		input('medium', 'uptimed/mail/address');
	($state == 4) && (get('uptimed/mail/do_mail') eq 'Both') &&
		input('medium', 'uptimed/mail/milestones_info');
	($state == 5) && input('low', 'uptimed/interval');

	my @ret = go;

	if($ret[0] == 30) {
		$state -= 1;
	} else {
		$state += 1;
	}
}

stop;
