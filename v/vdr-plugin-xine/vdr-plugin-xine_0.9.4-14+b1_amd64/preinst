#! /bin/sh
# preinst script for vdr-plugin-xine
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <new-preinst> `install'
#        * <new-preinst> `install' <old-version>
#        * <new-preinst> `upgrade' <old-version>
#        * <old-preinst> `abort-upgrade' <new-version>
#
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

case $1 in
    install|upgrade)
        [ ! -L /var/lib/vdr/plugins/xine ] || rm -f /var/lib/vdr/plugins/xine
    ;;
    abort-upgrade)
        # nothing to do
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

# Automatically added by dh_vdrplugin_enable
#
# To enable a vdr plugin, its config must be symlinked to /etc/vdr/conf.d.
# This must only be done when installing a plugin package or upgrading
# from an old package, which does not support the conf.d mechanism.
#
# Before installing, we remember if the plugin-config in conf.avail
# does not exist (because this is a new installation or an upgrade
# from an old installation or the config was removed by the admin)
# by creating a /etc/vdr/conf.d/*.dpkg-vdr-plugin-enable "tag"-file.
#
dh_vdrplugin_prepare_enable() {
  local pkgname="$1"
  shift
  while [ $# -gt 0 ] ; do
    local config=$1
    local priority=$2
    shift 2
    local old_md5sum="$(dpkg-query -W -f='${Conffiles}' $pkgname | sed -n -e "\' $config ' { s/ obsolete$//; s/.* //; p }")"
    if [ -z "$old_md5sum" ] ; then
      mkdir -p "/etc/vdr/conf.d"
      touch "/etc/vdr/conf.d/$priority-$config.dpkg-vdrplugin-enable"
    fi
  done
}

dh_vdrplugin_prepare_enable vdr-plugin-xine xine.conf 50
# End automatically added section


exit 0
