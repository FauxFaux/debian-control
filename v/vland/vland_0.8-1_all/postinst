#!/bin/sh
# postinst script for vland
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

VLAND_USER="vland"
VLAND_HOME="/var/lib/vland"
CFG_FILE="/etc/vland.cfg"
LOG_FILE="/var/log/vland.log"

case "$1" in
    configure)
	adduser --quiet --system --group --home $VLAND_HOME $VLAND_USER --shell /bin/sh
	# user may not have been removed but the directory has, after purge.
	if [ ! -d $VLAND_HOME ]; then
            mkdir $VLAND_HOME
            chown $VLAND_USER:$VLAND_USER $VLAND_HOME
	fi
	# Fix permissions of our config file - only let people in the
	# vland group read it, as it contains passwords
	chown $VLAND_USER:$VLAND_USER $CFG_FILE
	chmod 0640 $CFG_FILE
	
	# Ditto the logfile
	touch $LOG_FILE
	chown $VLAND_USER:$VLAND_USER $LOG_FILE
	chmod 0640 $LOG_FILE

	# We do *NOT* do anything automatic with database setup
	# here. See Vland/db/setup_db.py for an example on how to set
	# things up. We don't need the database to be on this host,
	# for example.

	# Equally, we do *NOT* set the daemon up to start
	# automatically. Without that database setup and switch
	# configuration being done, we will be able to nothing useful.
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

# Automatically added by dh_systemd_enable/11.5.3
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	# This will only remove masks created by d-s-h on package removal.
	deb-systemd-helper unmask 'vland.service' >/dev/null || true

	# was-enabled defaults to true, so new installations run enable.
	if deb-systemd-helper --quiet was-enabled 'vland.service'; then
		# Enables the unit on first installation, creates new
		# symlinks on upgrades if the unit file has changed.
		deb-systemd-helper enable 'vland.service' >/dev/null || true
	else
		# Update the statefile to add new symlinks (if any), which need to be
		# cleaned up on purge. Also remove old symlinks.
		deb-systemd-helper update-state 'vland.service' >/dev/null || true
	fi
fi
# End automatically added section

# Automatically added by dh_python2:
if which pycompile >/dev/null 2>&1; then
	pycompile -p vland 
fi

# End automatically added section

#

exit 0
