#!/bin/sh
# postinst script for wicd
#
# see: dh_installdeb(1)

set -e

. /usr/share/debconf/confmodule

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
    	if [ ! $(getent group netdev) ]; then
    		addgroup --quiet --system netdev
    	fi
        if [ -x "/etc/init.d/dbus" ]; then
            # Check if DBus has started, otherwise this fails on
            # certain environments (chroots, for example). See
            # #514778 #517395
            if [ -n "$DBUS_SESSION_BUS_ADDRESS" ]; then
                if [ -x "`which invoke-rc.d 2>/dev/null`" ]; then
                    invoke-rc.d dbus force-reload || exit $?
                else
                    /etc/init.d/dbus force-reload || exit $?
                fi
            fi
        fi

        # Add users previously selected in debconf
        db_get wicd/users
        users=$(echo $RET | sed -e 's@,@@g')
        for u in $users; do
            hasuser=$(getent passwd $u || true)
            if [ -n "$hasuser" ]; then
                adduser --quiet $u netdev
            fi
        done
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac


# Automatically added by dh_python2:
if which pycompile >/dev/null 2>&1; then
	pycompile -p wicd-daemon /usr/share/wicd/daemon
fi

# End automatically added section
# Automatically added by dh_installinit/11.2.1
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if [ -x "/etc/init.d/wicd" ]; then
		update-rc.d wicd defaults >/dev/null
		if [ -n "$2" ]; then
			_dh_action=restart
		else
			_dh_action=start
		fi
		invoke-rc.d wicd $_dh_action || exit 1
	fi
fi
# End automatically added section
# Automatically added by dh_installsystemd/11.2.1
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	# This will only remove masks created by d-s-h on package removal.
	deb-systemd-helper unmask 'wicd.service' >/dev/null || true

	# was-enabled defaults to true, so new installations run enable.
	if deb-systemd-helper --quiet was-enabled 'wicd.service'; then
		# Enables the unit on first installation, creates new
		# symlinks on upgrades if the unit file has changed.
		deb-systemd-helper enable 'wicd.service' >/dev/null || true
	else
		# Update the statefile to add new symlinks (if any), which need to be
		# cleaned up on purge. Also remove old symlinks.
		deb-systemd-helper update-state 'wicd.service' >/dev/null || true
	fi
fi
# End automatically added section


db_stop;

exit 0
