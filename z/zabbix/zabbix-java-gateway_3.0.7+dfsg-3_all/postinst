#!/bin/sh

set -e

# If /tmp/ZABBIX_PACKAGE_DEBUG file exists then enable debugging of this script.
#if [ -e /tmp/ZABBIX_PACKAGE_DEBUG ]; then
#    set -x
#fi

if [ "$1" = "configure" ]; then
    # Does the user 'zabbix' exist?
    if ! getent passwd zabbix > /dev/null 2>&1 ; then
        # Not yet. Create it.
        adduser --quiet --system --group --disabled-login --no-create-home --home /nonexistent zabbix
    fi

    chown zabbix:zabbix /var/log/zabbix-java-gateway -R
fi

# Automatically added by dh_systemd_enable
# This will only remove masks created by d-s-h on package removal.
deb-systemd-helper unmask zabbix-java-gateway.service >/dev/null || true

# was-enabled defaults to true, so new installations run enable.
if deb-systemd-helper --quiet was-enabled zabbix-java-gateway.service; then
	# Enables the unit on first installation, creates new
	# symlinks on upgrades if the unit file has changed.
	deb-systemd-helper enable zabbix-java-gateway.service >/dev/null || true
else
	# Update the statefile to add new symlinks (if any), which need to be
	# cleaned up on purge. Also remove old symlinks.
	deb-systemd-helper update-state zabbix-java-gateway.service >/dev/null || true
fi
# End automatically added section
# Automatically added by dh_installinit
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ]; then
	# In case this system is running systemd, we need to ensure that all
	# necessary tmpfiles (if any) are created before starting.
	if [ -d /run/systemd/system ] ; then
		systemd-tmpfiles --create /usr/lib/tmpfiles.d/zabbix-java-gateway.conf >/dev/null || true
	fi
fi
# End automatically added section
# Automatically added by dh_installinit
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ]; then
	if [ -x "/etc/init.d/zabbix-java-gateway" ]; then
		update-rc.d zabbix-java-gateway defaults >/dev/null
		invoke-rc.d zabbix-java-gateway start || exit $?
	fi
fi
# End automatically added section

