#!/bin/sh
# postrm script for zoph
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <overwriter>
#          <overwriter-version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package


if [ -f /usr/share/debconf/confmodule ]; then
   . /usr/share/debconf/confmodule
fi

if [ -f /usr/share/dbconfig-common/dpkg/postrm.mysql ]; then
  . /usr/share/dbconfig-common/dpkg/postrm.mysql
  dbc_go zoph $@
fi

case "$1" in
    purge|remove|upgrade|failed-upgrade|abort-install|abort-upgrade|disappear)


     case "$1" in
      purge)

   if [ ! $(grep -q zoph /etc/group) ]; then
       delgroup --system zoph
      fi

        rm -f /etc/zoph.ini
        rmdir /etc/zoph

#  The database is no use once the package has been purged
# but this should be handled by dbconfig_common
#   if [ -d /var/lib/mysql/zoph ]; then
#          mysqladmin --defaults-file=/etc/mysql/debian.cnf -f drop zoph
#       fi

# Also remove all the stored debconf information
#  - dont do this - there is a warning about maintainer scripts in the debconf man page
#  
#   echo PURGE | debconf-communicate zoph
#
#  it would need to be done before sourcing debconfs confmodule 

      ;;
        remove)
# If /var/lib/zoph is empty then we can definately remove it without needing
#  to ask
      
    if [ -d /var/lib/zoph/upload ]; then
      rmdir --ignore-fail-on-non-empty /var/lib/zoph/upload
         fi
    if [ -d /var/lib/zoph ]; then
      rmdir --ignore-fail-on-non-empty /var/lib/zoph
      fi

# If it is not emtpy then we need to check if the user told us what to do

   if [ -d /var/lib/zoph ]; then

     db_get zoph/rm_images
     RM_IMAGES=$RET
     case "$RM_IMAGES" in
       yes)
         rm -r /var/lib/zoph
         ;;
       no)
        # leave /var/lib/zoph alone
        ;;
      ask)
        db_input high zoph/keep_images
        db_go
        if [ ! "$RET" ]; then
          rm -r /var/lib/zoph
          fi 
         ;;

        esac

    fi

        ;;

      esac




    ;;

    *)
        echo "postrm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

# Automatically added by dh_installdebconf
if [ "$1" = purge ] && [ -e /usr/share/debconf/confmodule ]; then
	. /usr/share/debconf/confmodule
	db_purge
fi
# End automatically added section


exit 0
